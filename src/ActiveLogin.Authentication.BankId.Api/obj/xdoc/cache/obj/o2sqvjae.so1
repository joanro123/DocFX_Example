id: ActiveLogin.Authentication.BankId.Api
language: CSharp
name:
  Default: ActiveLogin.Authentication.BankId.Api
qualifiedName:
  Default: ActiveLogin.Authentication.BankId.Api
type: Assembly
modifiers: {}
items:
- id: ActiveLogin.Authentication.BankId.Api
  commentId: N:ActiveLogin.Authentication.BankId.Api
  language: CSharp
  name:
    CSharp: ActiveLogin.Authentication.BankId.Api
    VB: ActiveLogin.Authentication.BankId.Api
  nameWithType:
    CSharp: ActiveLogin.Authentication.BankId.Api
    VB: ActiveLogin.Authentication.BankId.Api
  qualifiedName:
    CSharp: ActiveLogin.Authentication.BankId.Api
    VB: ActiveLogin.Authentication.BankId.Api
  type: Namespace
  assemblies:
  - ActiveLogin.Authentication.BankId.Api
  modifiers: {}
  items:
  - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiClient
    language: CSharp
    name:
      CSharp: BankIdApiClient
      VB: BankIdApiClient
    nameWithType:
      CSharp: BankIdApiClient
      VB: BankIdApiClient
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
      VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
      id: BankIdApiClient
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
      startLine: 9
    summary: "\nHTTP based client for the BankID REST API.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BankIdApiClient : IBankIdApiClient'
        VB: >-
          Public Class BankIdApiClient

              Implements IBankIdApiClient
    inheritance:
    - System.Object
    implements:
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor(System.Net.Http.HttpClient)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor(System.Net.Http.HttpClient)
      language: CSharp
      name:
        CSharp: BankIdApiClient(HttpClient)
        VB: BankIdApiClient(HttpClient)
      nameWithType:
        CSharp: BankIdApiClient.BankIdApiClient(HttpClient)
        VB: BankIdApiClient.BankIdApiClient(HttpClient)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.BankIdApiClient(System.Net.Http.HttpClient)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.BankIdApiClient(System.Net.Http.HttpClient)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        startLine: 17
      summary: "\nCreates an instance of <xref href=\"ActiveLogin.Authentication.BankId.Api.BankIdApiClient\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Net.Http.HttpClient\" data-throw-if-not-resolved=\"false\"></xref> to talk HTTP.\n"
      example: []
      syntax:
        content:
          CSharp: public BankIdApiClient(HttpClient httpClient)
          VB: Public Sub New(httpClient As HttpClient)
        parameters:
        - id: httpClient
          type: System.Net.Http.HttpClient
          description: The HttpClient to use.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        ActiveLogin.Authentication.BankId.Api.BankIdApiClient: 
        System.Net.Http.HttpClient: 
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      language: CSharp
      name:
        CSharp: AuthAsync(AuthRequest)
        VB: AuthAsync(AuthRequest)
      nameWithType:
        CSharp: BankIdApiClient.AuthAsync(AuthRequest)
        VB: BankIdApiClient.AuthAsync(AuthRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        startLine: 26
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<AuthResponse> AuthAsync(AuthRequest request)
          VB: Public Function AuthAsync(request As AuthRequest) As Task(Of AuthResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      language: CSharp
      name:
        CSharp: SignAsync(SignRequest)
        VB: SignAsync(SignRequest)
      nameWithType:
        CSharp: BankIdApiClient.SignAsync(SignRequest)
        VB: BankIdApiClient.SignAsync(SignRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        startLine: 35
      summary: "\nInitiates an signing order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<SignResponse> SignAsync(SignRequest request)
          VB: Public Function SignAsync(request As SignRequest) As Task(Of SignResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      language: CSharp
      name:
        CSharp: CollectAsync(CollectRequest)
        VB: CollectAsync(CollectRequest)
      nameWithType:
        CSharp: BankIdApiClient.CollectAsync(CollectRequest)
        VB: BankIdApiClient.CollectAsync(CollectRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        id: CollectAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        startLine: 46
      summary: "\nCollects the result of a sign or auth order using the OrderRef as reference.\nRP should keep on calling collect every two seconds as long as status indicates pending.\nRP must abort if status indicates failed.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<CollectResponse> CollectAsync(CollectRequest request)
          VB: Public Function CollectAsync(request As CollectRequest) As Task(Of CollectResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}
          description: The user identity is returned when complete.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      language: CSharp
      name:
        CSharp: CancelAsync(CancelRequest)
        VB: CancelAsync(CancelRequest)
      nameWithType:
        CSharp: BankIdApiClient.CancelAsync(CancelRequest)
        VB: BankIdApiClient.CancelAsync(CancelRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        id: CancelAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClient.cs
        startLine: 55
      summary: "\nCancels an ongoing sign or auth order.\nThis is typically used if the user cancels the order in your service or app.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<CancelResponse> CancelAsync(CancelRequest request)
          VB: Public Function CancelAsync(request As CancelRequest) As Task(Of CancelResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    language: CSharp
    name:
      CSharp: BankIdApiClientExtensions
      VB: BankIdApiClientExtensions
    nameWithType:
      CSharp: BankIdApiClientExtensions
      VB: BankIdApiClientExtensions
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
      VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
      id: BankIdApiClientExtensions
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
      startLine: 8
    summary: "\nExtensions to enable easier access to common api scenarios.\n"
    example: []
    syntax:
      content:
        CSharp: public static class BankIdApiClientExtensions
        VB: Public Module BankIdApiClientExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      language: CSharp
      name:
        CSharp: AuthAsync(IBankIdApiClient, String)
        VB: AuthAsync(IBankIdApiClient, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String)
        VB: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 23
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AuthAsync(apiClient As IBankIdApiClient, endUserIp As String) As Task(Of AuthResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
      language: CSharp
      name:
        CSharp: AuthAsync(IBankIdApiClient, String, String)
        VB: AuthAsync(IBankIdApiClient, String, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, String)
        VB: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 45
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp, string personalIdentityNumber)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AuthAsync(apiClient As IBankIdApiClient, endUserIp As String, personalIdentityNumber As String) As Task(Of AuthResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AuthAsync(IBankIdApiClient, String, String, String)
        VB: AuthAsync(IBankIdApiClient, String, String, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, String, String)
        VB: BankIdApiClientExtensions.AuthAsync(IBankIdApiClient, String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 74
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<AuthResponse> AuthAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData, string userVisibleDataFormat)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AuthAsync(apiClient As IBankIdApiClient, endUserIp As String, userVisibleData As String, userVisibleDataFormat As String) As Task(Of AuthResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
        - id: userVisibleDataFormat
          type: System.String
          description: "\nIf present, and set to &quot;simpleMarkdownV1&quot;, this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at.\nFor further information of formatting options, please study the document Guidelines for Formatted Text.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
      language: CSharp
      name:
        CSharp: SignAsync(IBankIdApiClient, String, String)
        VB: SignAsync(IBankIdApiClient, String, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String)
        VB: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 95
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function SignAsync(apiClient As IBankIdApiClient, endUserIp As String, userVisibleData As String) As Task(Of SignResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: SignAsync(IBankIdApiClient, String, String, Byte[])
        VB: SignAsync(IBankIdApiClient, String, String, Byte())
      nameWithType:
        CSharp: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte[])
        VB: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.Byte[])
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.Byte())
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 119
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData, byte[] userNonVisibleData)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function SignAsync(apiClient As IBankIdApiClient, endUserIp As String, userVisibleData As String, userNonVisibleData As Byte()) As Task(Of SignResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: SignAsync(IBankIdApiClient, String, String, Byte[], String)
        VB: SignAsync(IBankIdApiClient, String, String, Byte(), String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte[], String)
        VB: BankIdApiClientExtensions.SignAsync(IBankIdApiClient, String, String, Byte(), String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.Byte[], System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String, System.String, System.Byte(), System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 147
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<SignResponse> SignAsync(this IBankIdApiClient apiClient, string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function SignAsync(apiClient As IBankIdApiClient, endUserIp As String, userVisibleData As String, userNonVisibleData As Byte(), personalIdentityNumber As String) As Task(Of SignResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP.String.IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      language: CSharp
      name:
        CSharp: CollectAsync(IBankIdApiClient, String)
        VB: CollectAsync(IBankIdApiClient, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.CollectAsync(IBankIdApiClient, String)
        VB: BankIdApiClientExtensions.CollectAsync(IBankIdApiClient, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: CollectAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 160
      summary: "\nCollects the result of a sign or auth order using the OrderRef as reference.\nRP should keep on calling collect every two seconds as long as status indicates pending.\nRP must abort if status indicates failed.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<CollectResponse> CollectAsync(this IBankIdApiClient apiClient, string orderRef)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CollectAsync(apiClient As IBankIdApiClient, orderRef As String) As Task(Of CollectResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: orderRef
          type: System.String
          description: The OrderRef returned from auth or sign.
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}
          description: The user identity is returned when complete.
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
      language: CSharp
      name:
        CSharp: CancelAsync(IBankIdApiClient, String)
        VB: CancelAsync(IBankIdApiClient, String)
      nameWithType:
        CSharp: BankIdApiClientExtensions.CancelAsync(IBankIdApiClient, String)
        VB: BankIdApiClientExtensions.CancelAsync(IBankIdApiClient, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient, System.String)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        id: CancelAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiClientExtensions.cs
        startLine: 171
      summary: "\nCancels an ongoing sign or auth order.\nThis is typically used if the user cancels the order in your service or app.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task<CancelResponse> CancelAsync(this IBankIdApiClient apiClient, string orderRef)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CancelAsync(apiClient As IBankIdApiClient, orderRef As String) As Task(Of CancelResponse)
        parameters:
        - id: apiClient
          type: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
          description: The <xref href="ActiveLogin.Authentication.BankId.Api.IBankIdApiClient" data-throw-if-not-resolved="false"></xref> instance.
        - id: orderRef
          type: System.String
          description: The OrderRef returned from auth or sign.
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ActiveLogin.Authentication.BankId.Api.IBankIdApiClient: 
  - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiException
    language: CSharp
    name:
      CSharp: BankIdApiException
      VB: BankIdApiException
    nameWithType:
      CSharp: BankIdApiException
      VB: BankIdApiException
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiException
      VB: ActiveLogin.Authentication.BankId.Api.BankIdApiException
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
      id: BankIdApiException
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
      startLine: 10
    summary: "\nException that wraps any error returned by the BankID API.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BankIdApiException : HttpRequestException, ISerializable'
        VB: >-
          Public Class BankIdApiException

              Inherits HttpRequestException

              Implements ISerializable
    inheritance:
    - System.Object
    - System.Exception
    - System.Net.Http.HttpRequestException
    implements:
    - System.Runtime.Serialization.ISerializable
    inheritedMembers:
    - System.Net.Http.HttpRequestException.StatusCode
    - System.Exception.GetBaseException
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.ToString
    - System.Exception.Data
    - System.Exception.HelpLink
    - System.Exception.HResult
    - System.Exception.InnerException
    - System.Exception.Message
    - System.Exception.Source
    - System.Exception.StackTrace
    - System.Exception.TargetSite
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
      commentId: P:ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
      language: CSharp
      name:
        CSharp: ErrorCode
        VB: ErrorCode
      nameWithType:
        CSharp: BankIdApiException.ErrorCode
        VB: BankIdApiException.ErrorCode
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
        id: ErrorCode
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
        startLine: 38
      summary: "\nThe category of error.\n"
      example: []
      syntax:
        content:
          CSharp: public ErrorCode ErrorCode { get; }
          VB: Public ReadOnly Property ErrorCode As ErrorCode
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
      commentId: P:ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
      language: CSharp
      name:
        CSharp: ErrorDetails
        VB: ErrorDetails
      nameWithType:
        CSharp: BankIdApiException.ErrorDetails
        VB: BankIdApiException.ErrorDetails
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
        VB: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
        id: ErrorDetails
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdApiException.cs
        startLine: 43
      summary: "\nDetails about the error.\n"
      example: []
      syntax:
        content:
          CSharp: public string ErrorDetails { get; }
          VB: Public ReadOnly Property ErrorDetails As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
    language: CSharp
    name:
      CSharp: BankIdSimulatedApiClient
      VB: BankIdSimulatedApiClient
    nameWithType:
      CSharp: BankIdSimulatedApiClient
      VB: BankIdSimulatedApiClient
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
      VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
      id: BankIdSimulatedApiClient
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
      startLine: 11
    summary: "\nDummy implementation that simulates the BankId API. Can be used for development and testing purposes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BankIdSimulatedApiClient : IBankIdApiClient'
        VB: >-
          Public Class BankIdSimulatedApiClient

              Implements IBankIdApiClient
    inheritance:
    - System.Object
    implements:
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient()
        VB: BankIdSimulatedApiClient()
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient()
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient()
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient()
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient()
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 36
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient()
          VB: Public Sub New
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient(List(Of BankIdSimulatedApiClient.CollectState))
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(List(Of BankIdSimulatedApiClient.CollectState))
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.Collections.Generic.List<ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState>)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.Collections.Generic.List(Of ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState))
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 41
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(List<BankIdSimulatedApiClient.CollectState> collectStates)
          VB: Public Sub New(collectStates As List(Of BankIdSimulatedApiClient.CollectState))
        parameters:
        - id: collectStates
          type: System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(String, String)
        VB: BankIdSimulatedApiClient(String, String)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 46
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(string givenName, string surname)
          VB: Public Sub New(givenName As String, surname As String)
        parameters:
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(String, String, String)
        VB: BankIdSimulatedApiClient(String, String, String)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 51
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(string givenName, string surname, string personalIdentityNumber)
          VB: Public Sub New(givenName As String, surname As String, personalIdentityNumber As String)
        parameters:
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
        - id: personalIdentityNumber
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(String, String, String, List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient(String, String, String, List(Of BankIdSimulatedApiClient.CollectState))
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, List(Of BankIdSimulatedApiClient.CollectState))
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.Collections.Generic.List<ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState>)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.Collections.Generic.List(Of ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState))
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 56
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(string givenName, string surname, string personalIdentityNumber, List<BankIdSimulatedApiClient.CollectState> collectStates)
          VB: Public Sub New(givenName As String, surname As String, personalIdentityNumber As String, collectStates As List(Of BankIdSimulatedApiClient.CollectState))
        parameters:
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
        - id: personalIdentityNumber
          type: System.String
        - id: collectStates
          type: System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(String, String, String, String)
        VB: BankIdSimulatedApiClient(String, String, String, String)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, String)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 61
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(string givenName, string surname, string name, string personalIdentityNumber)
          VB: Public Sub New(givenName As String, surname As String, name As String, personalIdentityNumber As String)
        parameters:
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
        - id: name
          type: System.String
        - id: personalIdentityNumber
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState})
      language: CSharp
      name:
        CSharp: BankIdSimulatedApiClient(String, String, String, String, List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient(String, String, String, String, List(Of BankIdSimulatedApiClient.CollectState))
      nameWithType:
        CSharp: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, String, List<BankIdSimulatedApiClient.CollectState>)
        VB: BankIdSimulatedApiClient.BankIdSimulatedApiClient(String, String, String, String, List(Of BankIdSimulatedApiClient.CollectState))
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.String, System.Collections.Generic.List<ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState>)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient(System.String, System.String, System.String, System.String, System.Collections.Generic.List(Of ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState))
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 66
      syntax:
        content:
          CSharp: public BankIdSimulatedApiClient(string givenName, string surname, string name, string personalIdentityNumber, List<BankIdSimulatedApiClient.CollectState> collectStates)
          VB: Public Sub New(givenName As String, surname As String, name As String, personalIdentityNumber As String, collectStates As List(Of BankIdSimulatedApiClient.CollectState))
        parameters:
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
        - id: name
          type: System.String
        - id: personalIdentityNumber
          type: System.String
        - id: collectStates
          type: System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
      commentId: P:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: BankIdSimulatedApiClient.Delay
        VB: BankIdSimulatedApiClient.Delay
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: Delay
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 75
      syntax:
        content:
          CSharp: public TimeSpan Delay { get; set; }
          VB: Public Property Delay As TimeSpan
        parameters: []
        return:
          type: System.TimeSpan
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      language: CSharp
      name:
        CSharp: AuthAsync(AuthRequest)
        VB: AuthAsync(AuthRequest)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.AuthAsync(AuthRequest)
        VB: BankIdSimulatedApiClient.AuthAsync(AuthRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 81
      syntax:
        content:
          CSharp: public async Task<AuthResponse> AuthAsync(AuthRequest request)
          VB: Public Function AuthAsync(request As AuthRequest) As Task(Of AuthResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      language: CSharp
      name:
        CSharp: SignAsync(SignRequest)
        VB: SignAsync(SignRequest)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.SignAsync(SignRequest)
        VB: BankIdSimulatedApiClient.SignAsync(SignRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 92
      syntax:
        content:
          CSharp: public async Task<SignResponse> SignAsync(SignRequest request)
          VB: Public Function SignAsync(request As SignRequest) As Task(Of SignResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      language: CSharp
      name:
        CSharp: CollectAsync(CollectRequest)
        VB: CollectAsync(CollectRequest)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.CollectAsync(CollectRequest)
        VB: BankIdSimulatedApiClient.CollectAsync(CollectRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: CollectAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 140
      syntax:
        content:
          CSharp: public async Task<CollectResponse> CollectAsync(CollectRequest request)
          VB: Public Function CollectAsync(request As CollectRequest) As Task(Of CollectResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      language: CSharp
      name:
        CSharp: CancelAsync(CancelRequest)
        VB: CancelAsync(CancelRequest)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.CancelAsync(CancelRequest)
        VB: BankIdSimulatedApiClient.CancelAsync(CancelRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: CancelAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 213
      syntax:
        content:
          CSharp: public async Task<CancelResponse> CancelAsync(CancelRequest request)
          VB: Public Function CancelAsync(request As CancelRequest) As Task(Of CancelResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync*
      implements:
      - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
  - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
    language: CSharp
    name:
      CSharp: BankIdSimulatedApiClient.CollectState
      VB: BankIdSimulatedApiClient.CollectState
    nameWithType:
      CSharp: BankIdSimulatedApiClient.CollectState
      VB: BankIdSimulatedApiClient.CollectState
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
      VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
      id: CollectState
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
      startLine: 267
    syntax:
      content:
        CSharp: public class CollectState
        VB: Public Class CollectState
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode)
      commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode)
      language: CSharp
      name:
        CSharp: CollectState(CollectStatus, CollectHintCode)
        VB: CollectState(CollectStatus, CollectHintCode)
      nameWithType:
        CSharp: BankIdSimulatedApiClient.CollectState.CollectState(CollectStatus, CollectHintCode)
        VB: BankIdSimulatedApiClient.CollectState.CollectState(CollectStatus, CollectHintCode)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.CollectState(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode)
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.CollectState(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 269
      syntax:
        content:
          CSharp: public CollectState(CollectStatus status, CollectHintCode hintCode)
          VB: Public Sub New(status As CollectStatus, hintCode As CollectHintCode)
        parameters:
        - id: status
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        - id: hintCode
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
      commentId: P:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: BankIdSimulatedApiClient.CollectState.Status
        VB: BankIdSimulatedApiClient.CollectState.Status
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: Status
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 275
      syntax:
        content:
          CSharp: public CollectStatus Status { get; }
          VB: Public ReadOnly Property Status As CollectStatus
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
      commentId: P:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
      language: CSharp
      name:
        CSharp: HintCode
        VB: HintCode
      nameWithType:
        CSharp: BankIdSimulatedApiClient.CollectState.HintCode
        VB: BankIdSimulatedApiClient.CollectState.HintCode
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
        VB: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        id: HintCode
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdSimulatedApiClient.cs
        startLine: 277
      syntax:
        content:
          CSharp: public CollectHintCode HintCode { get; }
          VB: Public ReadOnly Property HintCode As CollectHintCode
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      overload: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.BankIdUrls
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdUrls
    language: CSharp
    name:
      CSharp: BankIdUrls
      VB: BankIdUrls
    nameWithType:
      CSharp: BankIdUrls
      VB: BankIdUrls
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdUrls
      VB: ActiveLogin.Authentication.BankId.Api.BankIdUrls
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
      id: BankIdUrls
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
      startLine: 7
    summary: "\nURLs for BankID REST API.\n"
    example: []
    syntax:
      content:
        CSharp: public static class BankIdUrls
        VB: Public Module BankIdUrls
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdUrls.ProductionApiBaseUrl
      commentId: F:ActiveLogin.Authentication.BankId.Api.BankIdUrls.ProductionApiBaseUrl
      language: CSharp
      name:
        CSharp: ProductionApiBaseUrl
        VB: ProductionApiBaseUrl
      nameWithType:
        CSharp: BankIdUrls.ProductionApiBaseUrl
        VB: BankIdUrls.ProductionApiBaseUrl
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdUrls.ProductionApiBaseUrl
        VB: ActiveLogin.Authentication.BankId.Api.BankIdUrls.ProductionApiBaseUrl
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
        id: ProductionApiBaseUrl
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
        startLine: 12
      summary: "\nBase url for production API. Needs to be used in conjunction with a production certificate.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Uri ProductionApiBaseUrl
          VB: Public Shared ReadOnly ProductionApiBaseUrl As Uri
        return:
          type: System.Uri
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.BankIdUrls.TestApiBaseUrl
      commentId: F:ActiveLogin.Authentication.BankId.Api.BankIdUrls.TestApiBaseUrl
      language: CSharp
      name:
        CSharp: TestApiBaseUrl
        VB: TestApiBaseUrl
      nameWithType:
        CSharp: BankIdUrls.TestApiBaseUrl
        VB: BankIdUrls.TestApiBaseUrl
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdUrls.TestApiBaseUrl
        VB: ActiveLogin.Authentication.BankId.Api.BankIdUrls.TestApiBaseUrl
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
        id: TestApiBaseUrl
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdUrls.cs
        startLine: 17
      summary: "\nBase url for test API. Needs to be used in conjunction with the test certificate.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Uri TestApiBaseUrl
          VB: Public Shared ReadOnly TestApiBaseUrl As Uri
        return:
          type: System.Uri
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
    language: CSharp
    name:
      CSharp: BankIdUserVisibleDataFormats
      VB: BankIdUserVisibleDataFormats
    nameWithType:
      CSharp: BankIdUserVisibleDataFormats
      VB: BankIdUserVisibleDataFormats
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
      VB: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdUserVisibleDataFormats.cs
      id: BankIdUserVisibleDataFormats
      path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdUserVisibleDataFormats.cs
      startLine: 2
    syntax:
      content:
        CSharp: public class BankIdUserVisibleDataFormats
        VB: Public Class BankIdUserVisibleDataFormats
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.SimpleMarkdownV1
      commentId: F:ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.SimpleMarkdownV1
      language: CSharp
      name:
        CSharp: SimpleMarkdownV1
        VB: SimpleMarkdownV1
      nameWithType:
        CSharp: BankIdUserVisibleDataFormats.SimpleMarkdownV1
        VB: BankIdUserVisibleDataFormats.SimpleMarkdownV1
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.SimpleMarkdownV1
        VB: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats.SimpleMarkdownV1
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/BankIdUserVisibleDataFormats.cs
        id: SimpleMarkdownV1
        path: ../src/ActiveLogin.Authentication.BankId.Api/BankIdUserVisibleDataFormats.cs
        startLine: 4
      syntax:
        content:
          CSharp: public const string SimpleMarkdownV1 = "simpleMarkdownV1"
          VB: Public Const SimpleMarkdownV1 As String = "simpleMarkdownV1"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    commentId: T:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    language: CSharp
    name:
      CSharp: IBankIdApiClient
      VB: IBankIdApiClient
    nameWithType:
      CSharp: IBankIdApiClient
      VB: IBankIdApiClient
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      VB: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    type: Interface
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
      id: IBankIdApiClient
      path: ../src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
      startLine: 8
    summary: "\nBankID API Client that defines the supported methods as defined in the document &quot;BankID Relying Party Guidelines&quot;.\n"
    example: []
    syntax:
      content:
        CSharp: public interface IBankIdApiClient
        VB: Public Interface IBankIdApiClient
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
    - ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      language: CSharp
      name:
        CSharp: AuthAsync(AuthRequest)
        VB: AuthAsync(AuthRequest)
      nameWithType:
        CSharp: IBankIdApiClient.AuthAsync(AuthRequest)
        VB: IBankIdApiClient.AuthAsync(AuthRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
        VB: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        id: AuthAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        startLine: 14
      summary: "\nInitiates an authentication order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: Task<AuthResponse> AuthAsync(AuthRequest request)
          VB: Function AuthAsync(request As AuthRequest) As Task(Of AuthResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      language: CSharp
      name:
        CSharp: SignAsync(SignRequest)
        VB: SignAsync(SignRequest)
      nameWithType:
        CSharp: IBankIdApiClient.SignAsync(SignRequest)
        VB: IBankIdApiClient.SignAsync(SignRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
        VB: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        id: SignAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        startLine: 20
      summary: "\nInitiates an signing order. Use the collect method to query the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: Task<SignResponse> SignAsync(SignRequest request)
          VB: Function SignAsync(request As SignRequest) As Task(Of SignResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
          description: If the request is successful, the OrderRef and AutoStartToken is returned.
      overload: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      language: CSharp
      name:
        CSharp: CollectAsync(CollectRequest)
        VB: CollectAsync(CollectRequest)
      nameWithType:
        CSharp: IBankIdApiClient.CollectAsync(CollectRequest)
        VB: IBankIdApiClient.CollectAsync(CollectRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
        VB: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        id: CollectAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        startLine: 28
      summary: "\nCollects the result of a sign or auth order using the OrderRef as reference.\nRP should keep on calling collect every two seconds as long as status indicates pending.\nRP must abort if status indicates failed.\n"
      example: []
      syntax:
        content:
          CSharp: Task<CollectResponse> CollectAsync(CollectRequest request)
          VB: Function CollectAsync(request As CollectRequest) As Task(Of CollectResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}
          description: The user identity is returned when complete.
      overload: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      language: CSharp
      name:
        CSharp: CancelAsync(CancelRequest)
        VB: CancelAsync(CancelRequest)
      nameWithType:
        CSharp: IBankIdApiClient.CancelAsync(CancelRequest)
        VB: IBankIdApiClient.CancelAsync(CancelRequest)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
        VB: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        id: CancelAsync
        path: ../src/ActiveLogin.Authentication.BankId.Api/IBankIdApiClient.cs
        startLine: 34
      summary: "\nCancels an ongoing sign or auth order.\nThis is typically used if the user cancels the order in your service or app.\n"
      example: []
      syntax:
        content:
          CSharp: Task<CancelResponse> CancelAsync(CancelRequest request)
          VB: Function CancelAsync(request As CancelRequest) As Task(Of CancelResponse)
        parameters:
        - id: request
          type: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        return:
          type: System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}
      overload: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync*
      modifiers:
        CSharp: []
        VB: []
- id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  commentId: N:ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  language: CSharp
  name:
    CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  nameWithType:
    CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  qualifiedName:
    CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  type: Namespace
  assemblies:
  - ActiveLogin.Authentication.BankId.Api
  modifiers: {}
  items:
  - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
    commentId: T:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
    language: CSharp
    name:
      CSharp: BankIdCertificatePolicies
      VB: BankIdCertificatePolicies
    nameWithType:
      CSharp: BankIdCertificatePolicies
      VB: BankIdCertificatePolicies
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
      VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
      id: BankIdCertificatePolicies
      path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
      startLine: 6
    syntax:
      content:
        CSharp: public static class BankIdCertificatePolicies
        VB: Public Module BankIdCertificatePolicies
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
      language: CSharp
      name:
        CSharp: GetPoliciesForProductionEnvironment(BankIdCertificatePolicy[])
        VB: GetPoliciesForProductionEnvironment(BankIdCertificatePolicy())
      nameWithType:
        CSharp: BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(BankIdCertificatePolicy[])
        VB: BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(BankIdCertificatePolicy())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy())
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        id: GetPoliciesForProductionEnvironment
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        startLine: 8
      syntax:
        content:
          CSharp: public static List<string> GetPoliciesForProductionEnvironment(params BankIdCertificatePolicy[] certificatePolicies)
          VB: Public Shared Function GetPoliciesForProductionEnvironment(ParamArray certificatePolicies As BankIdCertificatePolicy()) As List(Of String)
        parameters:
        - id: certificatePolicies
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[]
        return:
          type: System.Collections.Generic.List{System.String}
      overload: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
      language: CSharp
      name:
        CSharp: GetPoliciesForTestEnvironment(BankIdCertificatePolicy[])
        VB: GetPoliciesForTestEnvironment(BankIdCertificatePolicy())
      nameWithType:
        CSharp: BankIdCertificatePolicies.GetPoliciesForTestEnvironment(BankIdCertificatePolicy[])
        VB: BankIdCertificatePolicies.GetPoliciesForTestEnvironment(BankIdCertificatePolicy())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[])
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy())
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        id: GetPoliciesForTestEnvironment
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static List<string> GetPoliciesForTestEnvironment(params BankIdCertificatePolicy[] certificatePolicies)
          VB: Public Shared Function GetPoliciesForTestEnvironment(ParamArray certificatePolicies As BankIdCertificatePolicy()) As List(Of String)
        parameters:
        - id: certificatePolicies
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[]
        return:
          type: System.Collections.Generic.List{System.String}
      overload: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      commentId: M:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      language: CSharp
      name:
        CSharp: GetPolicyForProductionEnvironment(BankIdCertificatePolicy)
        VB: GetPolicyForProductionEnvironment(BankIdCertificatePolicy)
      nameWithType:
        CSharp: BankIdCertificatePolicies.GetPolicyForProductionEnvironment(BankIdCertificatePolicy)
        VB: BankIdCertificatePolicies.GetPolicyForProductionEnvironment(BankIdCertificatePolicy)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        id: GetPolicyForProductionEnvironment
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        startLine: 23
      syntax:
        content:
          CSharp: public static string GetPolicyForProductionEnvironment(BankIdCertificatePolicy certificatePolicy)
          VB: Public Shared Function GetPolicyForProductionEnvironment(certificatePolicy As BankIdCertificatePolicy) As String
        parameters:
        - id: certificatePolicy
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      commentId: M:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      language: CSharp
      name:
        CSharp: GetPolicyForTestEnvironment(BankIdCertificatePolicy)
        VB: GetPolicyForTestEnvironment(BankIdCertificatePolicy)
      nameWithType:
        CSharp: BankIdCertificatePolicies.GetPolicyForTestEnvironment(BankIdCertificatePolicy)
        VB: BankIdCertificatePolicies.GetPolicyForTestEnvironment(BankIdCertificatePolicy)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment(ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        id: GetPolicyForTestEnvironment
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicies.cs
        startLine: 36
      syntax:
        content:
          CSharp: public static string GetPolicyForTestEnvironment(BankIdCertificatePolicy certificatePolicy)
          VB: Public Shared Function GetPolicyForTestEnvironment(certificatePolicy As BankIdCertificatePolicy) As String
        parameters:
        - id: certificatePolicy
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
    commentId: T:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
    language: CSharp
    name:
      CSharp: BankIdCertificatePolicy
      VB: BankIdCertificatePolicy
    nameWithType:
      CSharp: BankIdCertificatePolicy
      VB: BankIdCertificatePolicy
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
    type: Enum
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
      id: BankIdCertificatePolicy
      path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
      startLine: 2
    syntax:
      content:
        CSharp: public enum BankIdCertificatePolicy
        VB: Public Enum BankIdCertificatePolicy
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnFile
      commentId: F:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnFile
      language: CSharp
      name:
        CSharp: BankIdOnFile
        VB: BankIdOnFile
      nameWithType:
        CSharp: BankIdCertificatePolicy.BankIdOnFile
        VB: BankIdCertificatePolicy.BankIdOnFile
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnFile
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnFile
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        id: BankIdOnFile
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        startLine: 7
      summary: "\nBankID on file.\n"
      example: []
      syntax:
        content:
          CSharp: BankIdOnFile = 0
          VB: BankIdOnFile = 0
        return:
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnSmartCard
      commentId: F:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnSmartCard
      language: CSharp
      name:
        CSharp: BankIdOnSmartCard
        VB: BankIdOnSmartCard
      nameWithType:
        CSharp: BankIdCertificatePolicy.BankIdOnSmartCard
        VB: BankIdCertificatePolicy.BankIdOnSmartCard
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnSmartCard
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.BankIdOnSmartCard
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        id: BankIdOnSmartCard
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        startLine: 12
      summary: "\nBankID on smartcard.\n"
      example: []
      syntax:
        content:
          CSharp: BankIdOnSmartCard = 1
          VB: BankIdOnSmartCard = 1
        return:
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.MobileBankId
      commentId: F:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.MobileBankId
      language: CSharp
      name:
        CSharp: MobileBankId
        VB: MobileBankId
      nameWithType:
        CSharp: BankIdCertificatePolicy.MobileBankId
        VB: BankIdCertificatePolicy.MobileBankId
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.MobileBankId
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.MobileBankId
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        id: MobileBankId
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        startLine: 17
      summary: "\nMobile BankID.\n"
      example: []
      syntax:
        content:
          CSharp: MobileBankId = 2
          VB: MobileBankId = 2
        return:
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
      commentId: F:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
      language: CSharp
      name:
        CSharp: NordeaEidOnFileAndOnSmartCard
        VB: NordeaEidOnFileAndOnSmartCard
      nameWithType:
        CSharp: BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
        VB: BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.NordeaEidOnFileAndOnSmartCard
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        id: NordeaEidOnFileAndOnSmartCard
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        startLine: 22
      summary: "\nNordea e-id on file and on smart card.\n"
      example: []
      syntax:
        content:
          CSharp: NordeaEidOnFileAndOnSmartCard = 3
          VB: NordeaEidOnFileAndOnSmartCard = 3
        return:
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.TestBankId
      commentId: F:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.TestBankId
      language: CSharp
      name:
        CSharp: TestBankId
        VB: TestBankId
      nameWithType:
        CSharp: BankIdCertificatePolicy.TestBankId
        VB: BankIdCertificatePolicy.TestBankId
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.TestBankId
        VB: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy.TestBankId
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        id: TestBankId
        path: ../src/ActiveLogin.Authentication.BankId.Api/CertificatePolicies/BankIdCertificatePolicy.cs
        startLine: 27
      summary: "\nTest BankID for some BankID Banks.\n"
      example: []
      syntax:
        content:
          CSharp: TestBankId = 4
          VB: TestBankId = 4
        return:
          type: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: ActiveLogin.Authentication.BankId.Api.Models
  commentId: N:ActiveLogin.Authentication.BankId.Api.Models
  language: CSharp
  name:
    CSharp: ActiveLogin.Authentication.BankId.Api.Models
    VB: ActiveLogin.Authentication.BankId.Api.Models
  nameWithType:
    CSharp: ActiveLogin.Authentication.BankId.Api.Models
    VB: ActiveLogin.Authentication.BankId.Api.Models
  qualifiedName:
    CSharp: ActiveLogin.Authentication.BankId.Api.Models
    VB: ActiveLogin.Authentication.BankId.Api.Models
  type: Namespace
  assemblies:
  - ActiveLogin.Authentication.BankId.Api
  modifiers: {}
  items:
  - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
    language: CSharp
    name:
      CSharp: AuthRequest
      VB: AuthRequest
    nameWithType:
      CSharp: AuthRequest
      VB: AuthRequest
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
      VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
      id: AuthRequest
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
      startLine: 9
    summary: "\nAuth request parameters.\n"
    example: []
    syntax:
      content:
        CSharp: public class AuthRequest
        VB: Public Class AuthRequest
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String)
      language: CSharp
      name:
        CSharp: AuthRequest(String)
        VB: AuthRequest(String)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String)
        VB: AuthRequest.AuthRequest(String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 20
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp)
          VB: Public Sub New(endUserIp As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: AuthRequest(String, String)
        VB: AuthRequest(String, String)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String)
        VB: AuthRequest.AuthRequest(String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 38
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      language: CSharp
      name:
        CSharp: AuthRequest(String, String, Requirement)
        VB: AuthRequest(String, String, Requirement)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String, Requirement)
        VB: AuthRequest.AuthRequest(String, String, Requirement)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 57
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber, Requirement requirement)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String, requirement As Requirement)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AuthRequest(String, String, String)
        VB: AuthRequest(String, String, String)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String, String)
        VB: AuthRequest.AuthRequest(String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 82
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber, string userVisibleData)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String, userVisibleData As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: userVisibleData
          type: System.String
          description: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String)
      language: CSharp
      name:
        CSharp: AuthRequest(String, String, Requirement, String)
        VB: AuthRequest(String, String, Requirement, String)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String, Requirement, String)
        VB: AuthRequest.AuthRequest(String, String, Requirement, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 108
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber, Requirement requirement, string userVisibleData)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String, requirement As Requirement, userVisibleData As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
        - id: userVisibleData
          type: System.String
          description: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String,System.Byte[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: AuthRequest(String, String, Requirement, String, Byte[])
        VB: AuthRequest(String, String, Requirement, String, Byte())
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String, Requirement, String, Byte[])
        VB: AuthRequest.AuthRequest(String, String, Requirement, String, Byte())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String, System.Byte[])
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String, System.Byte())
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 137
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber, Requirement requirement, string userVisibleData, byte[] userNonVisibleData)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String, requirement As Requirement, userVisibleData As String, userNonVisibleData As Byte())
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
        - id: userVisibleData
          type: System.String
          description: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user. String. The value must be base 64-encoded. 1-1 500 characters after base 64-encoding\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String,System.Byte[],System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor(System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: AuthRequest(String, String, Requirement, String, Byte[], String)
        VB: AuthRequest(String, String, Requirement, String, Byte(), String)
      nameWithType:
        CSharp: AuthRequest.AuthRequest(String, String, Requirement, String, Byte[], String)
        VB: AuthRequest.AuthRequest(String, String, Requirement, String, Byte(), String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String, System.Byte[], System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest(System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String, System.Byte(), System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 170
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public AuthRequest(string endUserIp, string personalIdentityNumber, Requirement requirement, string userVisibleData, byte[] userNonVisibleData, string userVisibleDataFormat)
          VB: Public Sub New(endUserIp As String, personalIdentityNumber As String, requirement As Requirement, userVisibleData As String, userNonVisibleData As Byte(), userVisibleDataFormat As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
        - id: userVisibleData
          type: System.String
          description: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        - id: userVisibleDataFormat
          type: System.String
          description: "\nIf present, and set to &quot;simpleMarkdownV1&quot;, this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at.\nFor further information of formatting options, please study the document Guidelines for Formatted Text.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
      language: CSharp
      name:
        CSharp: EndUserIp
        VB: EndUserIp
      nameWithType:
        CSharp: AuthRequest.EndUserIp
        VB: AuthRequest.EndUserIp
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: EndUserIp
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 188
      summary: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("endUserIp")]

            public string EndUserIp { get; }
          VB: >-
            <JsonPropertyName("endUserIp")>

            Public ReadOnly Property EndUserIp As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: endUserIp
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
      language: CSharp
      name:
        CSharp: PersonalIdentityNumber
        VB: PersonalIdentityNumber
      nameWithType:
        CSharp: AuthRequest.PersonalIdentityNumber
        VB: AuthRequest.PersonalIdentityNumber
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: PersonalIdentityNumber
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 195
      summary: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("personalNumber")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string PersonalIdentityNumber { get; }
          VB: >-
            <JsonPropertyName("personalNumber")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property PersonalIdentityNumber As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: personalNumber
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
      language: CSharp
      name:
        CSharp: Requirement
        VB: Requirement
      nameWithType:
        CSharp: AuthRequest.Requirement
        VB: AuthRequest.Requirement
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: Requirement
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 201
      summary: "\nRequirements on how the auth or sign order must be performed.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("requirement")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public Requirement Requirement { get; }
          VB: >-
            <JsonPropertyName("requirement")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property Requirement As Requirement
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: requirement
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
      language: CSharp
      name:
        CSharp: UserVisibleData
        VB: UserVisibleData
      nameWithType:
        CSharp: AuthRequest.UserVisibleData
        VB: AuthRequest.UserVisibleData
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: UserVisibleData
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 211
      summary: "\nA text that is displayed to the user during authentication with BankID, with the\npurpose of providing context for the authentication and to enable users to notice if\nthere is something wrong about the identification and avoid attempted frauds.The\ntext can be formatted using CR, LF and CRLF for new lines.The text must be\nencoded as UTF-8 and then base 64 encoded. 1—1 500 characters after base 64encoding.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userVisibleData")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string UserVisibleData { get; }
          VB: >-
            <JsonPropertyName("userVisibleData")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property UserVisibleData As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userVisibleData
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
      language: CSharp
      name:
        CSharp: UserNonVisibleData
        VB: UserNonVisibleData
      nameWithType:
        CSharp: AuthRequest.UserNonVisibleData
        VB: AuthRequest.UserNonVisibleData
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: UserNonVisibleData
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 218
      summary: "\nData not displayed to the user. String. The value must be base 64-encoded. 1-1 500\ncharacters after base 64-encoding\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userNonVisibleData")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string UserNonVisibleData { get; }
          VB: >-
            <JsonPropertyName("userNonVisibleData")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property UserNonVisibleData As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userNonVisibleData
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
      language: CSharp
      name:
        CSharp: UserVisibleDataFormat
        VB: UserVisibleDataFormat
      nameWithType:
        CSharp: AuthRequest.UserVisibleDataFormat
        VB: AuthRequest.UserVisibleDataFormat
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        id: UserVisibleDataFormat
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthRequest.cs
        startLine: 227
      summary: "\nIf present, and set to “simpleMarkdownV1”, this parameter indicates that\nuserVisibleData holds formatting characters which, if used correctly, will make\nthe text displayed with the user nicer to look at.For further information of\nformatting options, please study the document Guidelines for Formatted Text.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userVisibleDataFormat")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string UserVisibleDataFormat { get; }
          VB: >-
            <JsonPropertyName("userVisibleDataFormat")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property UserVisibleDataFormat As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userVisibleDataFormat
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
    language: CSharp
    name:
      CSharp: AuthResponse
      VB: AuthResponse
    nameWithType:
      CSharp: AuthResponse
      VB: AuthResponse
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
      VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
      id: AuthResponse
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
      startLine: 7
    summary: "\nAuth response result.\n"
    example: []
    syntax:
      content:
        CSharp: public class AuthResponse
        VB: Public Class AuthResponse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AuthResponse(String, String, String, String)
        VB: AuthResponse(String, String, String, String)
      nameWithType:
        CSharp: AuthResponse.AuthResponse(String, String, String, String)
        VB: AuthResponse.AuthResponse(String, String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AuthResponse(System.String, System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AuthResponse(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        startLine: 9
      syntax:
        content:
          CSharp: public AuthResponse(string orderRef, string autoStartToken, string qrStartToken, string qrStartSecret)
          VB: Public Sub New(orderRef As String, autoStartToken As String, qrStartToken As String, qrStartSecret As String)
        parameters:
        - id: orderRef
          type: System.String
        - id: autoStartToken
          type: System.String
        - id: qrStartToken
          type: System.String
        - id: qrStartSecret
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
      language: CSharp
      name:
        CSharp: OrderRef
        VB: OrderRef
      nameWithType:
        CSharp: AuthResponse.OrderRef
        VB: AuthResponse.OrderRef
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        id: OrderRef
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        startLine: 20
      summary: "\nUsed to collect the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("orderRef")]

            public string OrderRef { get; }
          VB: >-
            <JsonPropertyName("orderRef")>

            Public ReadOnly Property OrderRef As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: orderRef
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
      language: CSharp
      name:
        CSharp: AutoStartToken
        VB: AutoStartToken
      nameWithType:
        CSharp: AuthResponse.AutoStartToken
        VB: AuthResponse.AutoStartToken
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        id: AutoStartToken
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        startLine: 26
      summary: "\nUsed as reference to this order when the client is started automatically.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("autoStartToken")]

            public string AutoStartToken { get; }
          VB: >-
            <JsonPropertyName("autoStartToken")>

            Public ReadOnly Property AutoStartToken As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: autoStartToken
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
      language: CSharp
      name:
        CSharp: QrStartToken
        VB: QrStartToken
      nameWithType:
        CSharp: AuthResponse.QrStartToken
        VB: AuthResponse.QrStartToken
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        id: QrStartToken
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        startLine: 32
      summary: "\nUsed to compute the animated QR code.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("qrStartToken")]

            public string QrStartToken { get; }
          VB: >-
            <JsonPropertyName("qrStartToken")>

            Public ReadOnly Property QrStartToken As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: qrStartToken
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
      language: CSharp
      name:
        CSharp: QrStartSecret
        VB: QrStartSecret
      nameWithType:
        CSharp: AuthResponse.QrStartSecret
        VB: AuthResponse.QrStartSecret
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
        VB: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        id: QrStartSecret
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/AuthResponse.cs
        startLine: 38
      summary: "\nUsed to compute the animated QR code.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("qrStartSecret")]

            public string QrStartSecret { get; }
          VB: >-
            <JsonPropertyName("qrStartSecret")>

            Public ReadOnly Property QrStartSecret As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: qrStartSecret
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
    language: CSharp
    name:
      CSharp: CancelRequest
      VB: CancelRequest
    nameWithType:
      CSharp: CancelRequest
      VB: CancelRequest
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
      VB: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
      id: CancelRequest
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
      startLine: 7
    summary: "\nCancel request parameters.\n"
    example: []
    syntax:
      content:
        CSharp: public class CancelRequest
        VB: Public Class CancelRequest
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor(System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor(System.String)
      language: CSharp
      name:
        CSharp: CancelRequest(String)
        VB: CancelRequest(String)
      nameWithType:
        CSharp: CancelRequest.CancelRequest(String)
        VB: CancelRequest.CancelRequest(String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.CancelRequest(System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.CancelRequest(System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
        startLine: 13
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public CancelRequest(string orderRef)
          VB: Public Sub New(orderRef As String)
        parameters:
        - id: orderRef
          type: System.String
          description: "\nThe OrderRef from the response from auth or sign.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
      language: CSharp
      name:
        CSharp: OrderRef
        VB: OrderRef
      nameWithType:
        CSharp: CancelRequest.OrderRef
        VB: CancelRequest.OrderRef
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
        VB: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
        id: OrderRef
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CancelRequest.cs
        startLine: 21
      summary: "\nThe OrderRef from the response from auth or sign.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("orderRef")]

            public string OrderRef { get; }
          VB: >-
            <JsonPropertyName("orderRef")>

            Public ReadOnly Property OrderRef As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: orderRef
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
    language: CSharp
    name:
      CSharp: CancelResponse
      VB: CancelResponse
    nameWithType:
      CSharp: CancelResponse
      VB: CancelResponse
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
      VB: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CancelResponse.cs
      id: CancelResponse
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CancelResponse.cs
      startLine: 6
    summary: "\nCancel response result.\n"
    example: []
    syntax:
      content:
        CSharp: public class CancelResponse
        VB: Public Class CancelResponse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor
      language: CSharp
      name:
        CSharp: CancelResponse()
        VB: CancelResponse()
      nameWithType:
        CSharp: CancelResponse.CancelResponse()
        VB: CancelResponse.CancelResponse()
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.CancelResponse()
        VB: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.CancelResponse()
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CancelResponse.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CancelResponse.cs
        startLine: 8
      syntax:
        content:
          CSharp: public CancelResponse()
          VB: Public Sub New
      overload: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Cert
    language: CSharp
    name:
      CSharp: Cert
      VB: Cert
    nameWithType:
      CSharp: Cert
      VB: Cert
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.Cert
      VB: ActiveLogin.Authentication.BankId.Api.Models.Cert
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
      id: Cert
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
      startLine: 7
    summary: "\nInformation related to the users certificate (BankID).\n"
    example: []
    syntax:
      content:
        CSharp: public class Cert
        VB: Public Class Cert
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.Models.Cert.ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
    - ActiveLogin.Authentication.BankId.Api.Models.Cert.ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor(System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: Cert(String, String)
        VB: Cert(String, String)
      nameWithType:
        CSharp: Cert.Cert(String, String)
        VB: Cert.Cert(String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Cert.Cert(System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.Cert.Cert(System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Cert(string notBefore, string notAfter)
          VB: Public Sub New(notBefore As String, notAfter As String)
        parameters:
        - id: notBefore
          type: System.String
        - id: notAfter
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
      language: CSharp
      name:
        CSharp: NotBefore
        VB: NotBefore
      nameWithType:
        CSharp: Cert.NotBefore
        VB: Cert.NotBefore
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
        VB: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        id: NotBefore
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        startLine: 18
      summary: "\nStart of validity of the users BankID. Represented as Unix Timestamp in Milliseconds.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("notBefore")]

            public string NotBefore { get; }
          VB: >-
            <JsonPropertyName("notBefore")>

            Public ReadOnly Property NotBefore As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: notBefore
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
      language: CSharp
      name:
        CSharp: NotAfter
        VB: NotAfter
      nameWithType:
        CSharp: Cert.NotAfter
        VB: Cert.NotAfter
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
        VB: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        id: NotAfter
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Cert.cs
        startLine: 24
      summary: "\nEnd of validity of the Users BankID. Represented as Unix Timestamp in Milliseconds.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("notAfter")]

            public string NotAfter { get; }
          VB: >-
            <JsonPropertyName("notAfter")>

            Public ReadOnly Property NotAfter As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: notAfter
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    language: CSharp
    name:
      CSharp: CertExtensions
      VB: CertExtensions
    nameWithType:
      CSharp: CertExtensions
      VB: CertExtensions
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
      VB: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
      id: CertExtensions
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
      startLine: 4
    syntax:
      content:
        CSharp: public static class CertExtensions
        VB: Public Module CertExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      language: CSharp
      name:
        CSharp: GetNotBeforeDateTime(Cert)
        VB: GetNotBeforeDateTime(Cert)
      nameWithType:
        CSharp: CertExtensions.GetNotBeforeDateTime(Cert)
        VB: CertExtensions.GetNotBeforeDateTime(Cert)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
        id: GetNotBeforeDateTime
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
        startLine: 9
      summary: "\nStart of validity of the users BankID.\n"
      example: []
      syntax:
        content:
          CSharp: public static DateTime GetNotBeforeDateTime(this Cert cert)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetNotBeforeDateTime(cert As Cert) As Date
        parameters:
        - id: cert
          type: ActiveLogin.Authentication.BankId.Api.Models.Cert
        return:
          type: System.DateTime
      overload: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      language: CSharp
      name:
        CSharp: GetNotAfterDateTime(Cert)
        VB: GetNotAfterDateTime(Cert)
      nameWithType:
        CSharp: CertExtensions.GetNotAfterDateTime(Cert)
        VB: CertExtensions.GetNotAfterDateTime(Cert)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
        id: GetNotAfterDateTime
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CertExtensions.cs
        startLine: 17
      summary: "\nEnd of validity of the Users BankID.\n"
      example: []
      syntax:
        content:
          CSharp: public static DateTime GetNotAfterDateTime(this Cert cert)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetNotAfterDateTime(cert As Cert) As Date
        parameters:
        - id: cert
          type: ActiveLogin.Authentication.BankId.Api.Models.Cert
        return:
          type: System.DateTime
      overload: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
    language: CSharp
    name:
      CSharp: CollectHintCode
      VB: CollectHintCode
    nameWithType:
      CSharp: CollectHintCode
      VB: CollectHintCode
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
    type: Enum
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
      id: CollectHintCode
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
      startLine: 5
    summary: "\nPossible values of hint code for collect call.\n"
    example: []
    syntax:
      content:
        CSharp: public enum CollectHintCode
        VB: Public Enum CollectHintCode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Unknown
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: CollectHintCode.Unknown
        VB: CollectHintCode.Unknown
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Unknown
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Unknown
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: Unknown
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 10
      summary: "\nUnknown or new hint code.\n"
      example: []
      syntax:
        content:
          CSharp: Unknown = 0
          VB: Unknown = 0
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.OutstandingTransaction
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.OutstandingTransaction
      language: CSharp
      name:
        CSharp: OutstandingTransaction
        VB: OutstandingTransaction
      nameWithType:
        CSharp: CollectHintCode.OutstandingTransaction
        VB: CollectHintCode.OutstandingTransaction
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.OutstandingTransaction
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.OutstandingTransaction
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: OutstandingTransaction
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 19
      summary: "\nThe order is pending.\nThe client has not yet received the order.\nThe HintCode will later change to NoClient, Started or UserSign.\n"
      example: []
      syntax:
        content:
          CSharp: OutstandingTransaction = 1
          VB: OutstandingTransaction = 1
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.NoClient
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.NoClient
      language: CSharp
      name:
        CSharp: NoClient
        VB: NoClient
      nameWithType:
        CSharp: CollectHintCode.NoClient
        VB: CollectHintCode.NoClient
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.NoClient
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.NoClient
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: NoClient
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 25
      summary: "\nThe order is pending.\nThe client has not yet received the order.\n"
      example: []
      syntax:
        content:
          CSharp: NoClient = 2
          VB: NoClient = 2
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Started
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Started
      language: CSharp
      name:
        CSharp: Started
        VB: Started
      nameWithType:
        CSharp: CollectHintCode.Started
        VB: CollectHintCode.Started
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Started
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Started
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: Started
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 33
      summary: "\nThe order is pending.\nA client has been started with the autostarttoken but a usable ID has not yet been found in the started client.\nWhen the client starts there may be a short delay until all ID:s are registered.\nThe user may not have any usable ID:s at all, or has not yet inserted their smart card.\n"
      example: []
      syntax:
        content:
          CSharp: Started = 3
          VB: Started = 3
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserSign
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserSign
      language: CSharp
      name:
        CSharp: UserSign
        VB: UserSign
      nameWithType:
        CSharp: CollectHintCode.UserSign
        VB: CollectHintCode.UserSign
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserSign
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserSign
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: UserSign
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 39
      summary: "\nThe order is pending.\nThe client has received the order.\n"
      example: []
      syntax:
        content:
          CSharp: UserSign = 4
          VB: UserSign = 4
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.ExpiredTransaction
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.ExpiredTransaction
      language: CSharp
      name:
        CSharp: ExpiredTransaction
        VB: ExpiredTransaction
      nameWithType:
        CSharp: CollectHintCode.ExpiredTransaction
        VB: CollectHintCode.ExpiredTransaction
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.ExpiredTransaction
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.ExpiredTransaction
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: ExpiredTransaction
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 47
      summary: "\nThe order has expired.\nThe BankID security app/program did not start, the user did not finalize the signing or the RP called collect too late.\n"
      example: []
      syntax:
        content:
          CSharp: ExpiredTransaction = 5
          VB: ExpiredTransaction = 5
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.CertificateErr
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.CertificateErr
      language: CSharp
      name:
        CSharp: CertificateErr
        VB: CertificateErr
      nameWithType:
        CSharp: CollectHintCode.CertificateErr
        VB: CollectHintCode.CertificateErr
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.CertificateErr
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.CertificateErr
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: CertificateErr
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 55
      summary: "\nThis error is returned if:\n1) The user has entered wrong security code too many times. The BankID cannot be used.\n2) The users BankID is revoked.\n3) The users BankID is invalid.\n"
      example: []
      syntax:
        content:
          CSharp: CertificateErr = 6
          VB: CertificateErr = 6
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserCancel
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserCancel
      language: CSharp
      name:
        CSharp: UserCancel
        VB: UserCancel
      nameWithType:
        CSharp: CollectHintCode.UserCancel
        VB: CollectHintCode.UserCancel
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserCancel
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.UserCancel
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: UserCancel
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 60
      summary: "\nThe user decided to cancel the order.\n"
      example: []
      syntax:
        content:
          CSharp: UserCancel = 7
          VB: UserCancel = 7
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Cancelled
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Cancelled
      language: CSharp
      name:
        CSharp: Cancelled
        VB: Cancelled
      nameWithType:
        CSharp: CollectHintCode.Cancelled
        VB: CollectHintCode.Cancelled
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Cancelled
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.Cancelled
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: Cancelled
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 65
      summary: "\nThe order was cancelled. The system received a new order for the user.\n"
      example: []
      syntax:
        content:
          CSharp: Cancelled = 8
          VB: Cancelled = 8
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.StartFailed
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.StartFailed
      language: CSharp
      name:
        CSharp: StartFailed
        VB: StartFailed
      nameWithType:
        CSharp: CollectHintCode.StartFailed
        VB: CollectHintCode.StartFailed
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.StartFailed
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode.StartFailed
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        id: StartFailed
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectHintCode.cs
        startLine: 72
      summary: "\nThe user did not provide her ID, or the RP requires AutoStartToken to be used, but the client did not start within a certain time limit. The reason may be:\n1) RP did not use autoStartToken when starting BankID security program/app. RP must correct this in their implementation.\n2) The client software was not installed or other problem with the user’s computer.\n"
      example: []
      syntax:
        content:
          CSharp: StartFailed = 9
          VB: StartFailed = 9
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
    language: CSharp
    name:
      CSharp: CollectRequest
      VB: CollectRequest
    nameWithType:
      CSharp: CollectRequest
      VB: CollectRequest
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
      VB: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
      id: CollectRequest
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
      startLine: 7
    summary: "\nCollect request parameters.\n"
    example: []
    syntax:
      content:
        CSharp: public class CollectRequest
        VB: Public Class CollectRequest
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor(System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor(System.String)
      language: CSharp
      name:
        CSharp: CollectRequest(String)
        VB: CollectRequest(String)
      nameWithType:
        CSharp: CollectRequest.CollectRequest(String)
        VB: CollectRequest.CollectRequest(String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.CollectRequest(System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.CollectRequest(System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
        startLine: 16
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public CollectRequest(string orderRef)
          VB: Public Sub New(orderRef As String)
        parameters:
        - id: orderRef
          type: System.String
          description: "\nThe OrderRef returned from auth or sign.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
      language: CSharp
      name:
        CSharp: OrderRef
        VB: OrderRef
      nameWithType:
        CSharp: CollectRequest.OrderRef
        VB: CollectRequest.OrderRef
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
        id: OrderRef
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectRequest.cs
        startLine: 24
      summary: "\nThe OrderRef returned from auth or sign.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("orderRef")]

            public string OrderRef { get; }
          VB: >-
            <JsonPropertyName("orderRef")>

            Public ReadOnly Property OrderRef As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: orderRef
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
    language: CSharp
    name:
      CSharp: CollectResponse
      VB: CollectResponse
    nameWithType:
      CSharp: CollectResponse
      VB: CollectResponse
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
      id: CollectResponse
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
      startLine: 7
    summary: "\nCollect response result.\n"
    example: []
    syntax:
      content:
        CSharp: public class CollectResponse
        VB: Public Class CollectResponse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
    - ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor(System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: CollectResponse(String, String, String)
        VB: CollectResponse(String, String, String)
      nameWithType:
        CSharp: CollectResponse.CollectResponse(String, String, String)
        VB: CollectResponse.CollectResponse(String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse(System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse(System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 9
      syntax:
        content:
          CSharp: public CollectResponse(string orderRef, string status, string hintCode)
          VB: Public Sub New(orderRef As String, status As String, hintCode As String)
        parameters:
        - id: orderRef
          type: System.String
        - id: status
          type: System.String
        - id: hintCode
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor(System.String,System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor(System.String,System.String,System.String,ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      language: CSharp
      name:
        CSharp: CollectResponse(String, String, String, CompletionData)
        VB: CollectResponse(String, String, String, CompletionData)
      nameWithType:
        CSharp: CollectResponse.CollectResponse(String, String, String, CompletionData)
        VB: CollectResponse.CollectResponse(String, String, String, CompletionData)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse(System.String, System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse(System.String, System.String, System.String, ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 14
      syntax:
        content:
          CSharp: >-
            [JsonConstructor]

            public CollectResponse(string orderRef, string status, string hintCode, CompletionData completionData)
          VB: >-
            <JsonConstructor>

            Public Sub New(orderRef As String, status As String, hintCode As String, completionData As CompletionData)
        parameters:
        - id: orderRef
          type: System.String
        - id: status
          type: System.String
        - id: hintCode
          type: System.String
        - id: completionData
          type: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor*
      attributes:
      - type: System.Text.Json.Serialization.JsonConstructorAttribute
        ctor: System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
      language: CSharp
      name:
        CSharp: OrderRef
        VB: OrderRef
      nameWithType:
        CSharp: CollectResponse.OrderRef
        VB: CollectResponse.OrderRef
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: OrderRef
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 26
      summary: "\nThe orderRef in question.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("orderRef")]

            public string OrderRef { get; }
          VB: >-
            <JsonPropertyName("orderRef")>

            Public ReadOnly Property OrderRef As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: orderRef
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: CollectResponse.Status
        VB: CollectResponse.Status
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: Status
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 32
      summary: "\nCollect status.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("status")]

            public string Status { get; }
          VB: >-
            <JsonPropertyName("status")>

            Public ReadOnly Property Status As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: status
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
      language: CSharp
      name:
        CSharp: HintCode
        VB: HintCode
      nameWithType:
        CSharp: CollectResponse.HintCode
        VB: CollectResponse.HintCode
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: HintCode
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 40
      summary: "\nCollect hint code.\nRP should use the HintCode to provide the user with details and instructions and keep on calling collect until failed or complete.\n"
      remarks: Only present for pending and failed orders.
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("hintCode")]

            public string HintCode { get; }
          VB: >-
            <JsonPropertyName("hintCode")>

            Public ReadOnly Property HintCode As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: hintCode
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
      language: CSharp
      name:
        CSharp: CompletionData
        VB: CompletionData
      nameWithType:
        CSharp: CollectResponse.CompletionData
        VB: CollectResponse.CompletionData
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        id: CompletionData
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponse.cs
        startLine: 49
      summary: "\nThe completionData includes the signature, user information and the OCSP response.\nRP should control the user information and continue their process.\nRP should keep the completion data for future references/compliance/audit.\n"
      remarks: Only present for complete orders.
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("completionData")]

            public CompletionData CompletionData { get; }
          VB: >-
            <JsonPropertyName("completionData")>

            Public ReadOnly Property CompletionData As CompletionData
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: completionData
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    language: CSharp
    name:
      CSharp: CollectResponseExtensions
      VB: CollectResponseExtensions
    nameWithType:
      CSharp: CollectResponseExtensions
      VB: CollectResponseExtensions
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
      VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
      id: CollectResponseExtensions
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
      startLine: 4
    syntax:
      content:
        CSharp: public static class CollectResponseExtensions
        VB: Public Module CollectResponseExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      language: CSharp
      name:
        CSharp: GetCollectStatus(CollectResponse)
        VB: GetCollectStatus(CollectResponse)
      nameWithType:
        CSharp: CollectResponseExtensions.GetCollectStatus(CollectResponse)
        VB: CollectResponseExtensions.GetCollectStatus(CollectResponse)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
        id: GetCollectStatus
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
        startLine: 9
      summary: "\nCollect status.\n"
      example: []
      syntax:
        content:
          CSharp: public static CollectStatus GetCollectStatus(this CollectResponse collectResponse)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetCollectStatus(collectResponse As CollectResponse) As CollectStatus
        parameters:
        - id: collectResponse
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      language: CSharp
      name:
        CSharp: GetCollectHintCode(CollectResponse)
        VB: GetCollectHintCode(CollectResponse)
      nameWithType:
        CSharp: CollectResponseExtensions.GetCollectHintCode(CollectResponse)
        VB: CollectResponseExtensions.GetCollectHintCode(CollectResponse)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
        id: GetCollectHintCode
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectResponseExtensions.cs
        startLine: 19
      summary: "\nCollect hint code.\nRP should use the HintCode to provide the user with details and instructions and keep on calling collect until failed or complete.\n"
      remarks: Only present for pending and failed orders.
      example: []
      syntax:
        content:
          CSharp: public static CollectHintCode GetCollectHintCode(this CollectResponse collectResponse)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetCollectHintCode(collectResponse As CollectResponse) As CollectHintCode
        parameters:
        - id: collectResponse
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      overload: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
    language: CSharp
    name:
      CSharp: CollectStatus
      VB: CollectStatus
    nameWithType:
      CSharp: CollectStatus
      VB: CollectStatus
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      VB: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
    type: Enum
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
      id: CollectStatus
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
      startLine: 5
    summary: "\nPossible values of status for collect call.\n"
    example: []
    syntax:
      content:
        CSharp: public enum CollectStatus
        VB: Public Enum CollectStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Unknown
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: CollectStatus.Unknown
        VB: CollectStatus.Unknown
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Unknown
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Unknown
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        id: Unknown
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        startLine: 10
      summary: "\nUnknown or new status.\n"
      example: []
      syntax:
        content:
          CSharp: Unknown = 0
          VB: Unknown = 0
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Pending
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Pending
      language: CSharp
      name:
        CSharp: Pending
        VB: Pending
      nameWithType:
        CSharp: CollectStatus.Pending
        VB: CollectStatus.Pending
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Pending
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Pending
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        id: Pending
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        startLine: 15
      summary: "\nThe order is being processed. HintCode describes the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: Pending = 1
          VB: Pending = 1
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Failed
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Failed
      language: CSharp
      name:
        CSharp: Failed
        VB: Failed
      nameWithType:
        CSharp: CollectStatus.Failed
        VB: CollectStatus.Failed
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Failed
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Failed
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        id: Failed
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        startLine: 20
      summary: "\nSomething went wrong with the order. HintCode describes the error.\n"
      example: []
      syntax:
        content:
          CSharp: Failed = 2
          VB: Failed = 2
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Complete
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Complete
      language: CSharp
      name:
        CSharp: Complete
        VB: Complete
      nameWithType:
        CSharp: CollectStatus.Complete
        VB: CollectStatus.Complete
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Complete
        VB: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus.Complete
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        id: Complete
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CollectStatus.cs
        startLine: 25
      summary: "\nThe order is complete. CompletionData holds user information.\n"
      example: []
      syntax:
        content:
          CSharp: Complete = 3
          VB: Complete = 3
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CompletionData
    language: CSharp
    name:
      CSharp: CompletionData
      VB: CompletionData
    nameWithType:
      CSharp: CompletionData
      VB: CompletionData
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
      id: CompletionData
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
      startLine: 4
    syntax:
      content:
        CSharp: public class CompletionData
        VB: Public Class CompletionData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - ActiveLogin.Authentication.BankId.Api.Models.CompletionData.ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor(ActiveLogin.Authentication.BankId.Api.Models.User,ActiveLogin.Authentication.BankId.Api.Models.Device,ActiveLogin.Authentication.BankId.Api.Models.Cert,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor(ActiveLogin.Authentication.BankId.Api.Models.User,ActiveLogin.Authentication.BankId.Api.Models.Device,ActiveLogin.Authentication.BankId.Api.Models.Cert,System.String,System.String)
      language: CSharp
      name:
        CSharp: CompletionData(User, Device, Cert, String, String)
        VB: CompletionData(User, Device, Cert, String, String)
      nameWithType:
        CSharp: CompletionData.CompletionData(User, Device, Cert, String, String)
        VB: CompletionData.CompletionData(User, Device, Cert, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.CompletionData(ActiveLogin.Authentication.BankId.Api.Models.User, ActiveLogin.Authentication.BankId.Api.Models.Device, ActiveLogin.Authentication.BankId.Api.Models.Cert, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.CompletionData(ActiveLogin.Authentication.BankId.Api.Models.User, ActiveLogin.Authentication.BankId.Api.Models.Device, ActiveLogin.Authentication.BankId.Api.Models.Cert, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 6
      syntax:
        content:
          CSharp: public CompletionData(User user, Device device, Cert cert, string signature, string ocspResponse)
          VB: Public Sub New(user As User, device As Device, cert As Cert, signature As String, ocspResponse As String)
        parameters:
        - id: user
          type: ActiveLogin.Authentication.BankId.Api.Models.User
        - id: device
          type: ActiveLogin.Authentication.BankId.Api.Models.Device
        - id: cert
          type: ActiveLogin.Authentication.BankId.Api.Models.Cert
        - id: signature
          type: System.String
        - id: ocspResponse
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
      language: CSharp
      name:
        CSharp: User
        VB: User
      nameWithType:
        CSharp: CompletionData.User
        VB: CompletionData.User
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: User
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 18
      summary: "\nInformation related to the user.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("user")]

            public User User { get; }
          VB: >-
            <JsonPropertyName("user")>

            Public ReadOnly Property User As User
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.User
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: user
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
      language: CSharp
      name:
        CSharp: Device
        VB: Device
      nameWithType:
        CSharp: CompletionData.Device
        VB: CompletionData.Device
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: Device
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 24
      summary: "\nInformation related to the device.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("device")]

            public Device Device { get; }
          VB: >-
            <JsonPropertyName("device")>

            Public ReadOnly Property Device As Device
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.Device
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: device
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
      language: CSharp
      name:
        CSharp: Cert
        VB: Cert
      nameWithType:
        CSharp: CompletionData.Cert
        VB: CompletionData.Cert
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: Cert
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 30
      summary: "\nInformation related to the users certificate (BankID).\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("cert")]

            public Cert Cert { get; }
          VB: >-
            <JsonPropertyName("cert")>

            Public ReadOnly Property Cert As Cert
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.Cert
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: cert
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
      language: CSharp
      name:
        CSharp: Signature
        VB: Signature
      nameWithType:
        CSharp: CompletionData.Signature
        VB: CompletionData.Signature
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: Signature
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 37
      summary: "\nThe signature. Base64-encoded.\nThe content of the signature is described in BankID Signature Profile specification.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("signature")]

            public string Signature { get; }
          VB: >-
            <JsonPropertyName("signature")>

            Public ReadOnly Property Signature As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: signature
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
      language: CSharp
      name:
        CSharp: OcspResponse
        VB: OcspResponse
      nameWithType:
        CSharp: CompletionData.OcspResponse
        VB: CompletionData.OcspResponse
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        id: OcspResponse
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionData.cs
        startLine: 45
      summary: "\nThe OCSP response. String. Base64-encoded.\nThe OCSP response is signed by a certificate that has the same issuer as the certificate being verified.\nThe OSCP response has an extension for Nonce.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("ocspResponse")]

            public string OcspResponse { get; }
          VB: >-
            <JsonPropertyName("ocspResponse")>

            Public ReadOnly Property OcspResponse As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: ocspResponse
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
    language: CSharp
    name:
      CSharp: CompletionDataExtensions
      VB: CompletionDataExtensions
    nameWithType:
      CSharp: CompletionDataExtensions
      VB: CompletionDataExtensions
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
      VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionDataExtensions.cs
      id: CompletionDataExtensions
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionDataExtensions.cs
      startLine: 5
    syntax:
      content:
        CSharp: public static class CompletionDataExtensions
        VB: Public Module CompletionDataExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      language: CSharp
      name:
        CSharp: GetSignatureXml(CompletionData)
        VB: GetSignatureXml(CompletionData)
      nameWithType:
        CSharp: CompletionDataExtensions.GetSignatureXml(CompletionData)
        VB: CompletionDataExtensions.GetSignatureXml(CompletionData)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
        VB: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/CompletionDataExtensions.cs
        id: GetSignatureXml
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/CompletionDataExtensions.cs
        startLine: 10
      summary: "\nThe signature as XML. The content of the signature is described in BankID Signature Profile specification.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetSignatureXml(this CompletionData completionData)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSignatureXml(completionData As CompletionData) As String
        parameters:
        - id: completionData
          type: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ActiveLogin.Authentication.BankId.Api.Models.Device
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Device
    language: CSharp
    name:
      CSharp: Device
      VB: Device
    nameWithType:
      CSharp: Device
      VB: Device
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.Device
      VB: ActiveLogin.Authentication.BankId.Api.Models.Device
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
      id: Device
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
      startLine: 7
    summary: "\nInformation related to the device.\n"
    example: []
    syntax:
      content:
        CSharp: public class Device
        VB: Public Class Device
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor(System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor(System.String)
      language: CSharp
      name:
        CSharp: Device(String)
        VB: Device(String)
      nameWithType:
        CSharp: Device.Device(String)
        VB: Device.Device(String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Device.Device(System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.Device.Device(System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Device(string ipAddress)
          VB: Public Sub New(ipAddress As String)
        parameters:
        - id: ipAddress
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
      language: CSharp
      name:
        CSharp: IpAddress
        VB: IpAddress
      nameWithType:
        CSharp: Device.IpAddress
        VB: Device.IpAddress
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
        VB: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
        id: IpAddress
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Device.cs
        startLine: 17
      summary: "\nThe IP address of the user agent as the BankID server discovers it.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("ipAddress")]

            public string IpAddress { get; }
          VB: >-
            <JsonPropertyName("ipAddress")>

            Public ReadOnly Property IpAddress As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: ipAddress
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
    language: CSharp
    name:
      CSharp: ErrorCode
      VB: ErrorCode
    nameWithType:
      CSharp: ErrorCode
      VB: ErrorCode
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
    type: Enum
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
      id: ErrorCode
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
      startLine: 5
    summary: "\nPossible values of error codes returned from an error response.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ErrorCode
        VB: Public Enum ErrorCode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unknown
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: ErrorCode.Unknown
        VB: ErrorCode.Unknown
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unknown
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unknown
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: Unknown
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 7
      syntax:
        content:
          CSharp: Unknown = 0
          VB: Unknown = 0
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.AlreadyInProgress
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.AlreadyInProgress
      language: CSharp
      name:
        CSharp: AlreadyInProgress
        VB: AlreadyInProgress
      nameWithType:
        CSharp: ErrorCode.AlreadyInProgress
        VB: ErrorCode.AlreadyInProgress
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.AlreadyInProgress
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.AlreadyInProgress
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: AlreadyInProgress
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 16
      summary: "\nAn auth or sign request with personal number was sent, but an order for the user is already in progress.\nThe order is aborted. No order is created.\n\nRP must inform the user that an auth or sign order is already in progress for the user. Message RFA4 should be used.\n"
      example: []
      syntax:
        content:
          CSharp: AlreadyInProgress = 1
          VB: AlreadyInProgress = 1
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InvalidParameters
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InvalidParameters
      language: CSharp
      name:
        CSharp: InvalidParameters
        VB: InvalidParameters
      nameWithType:
        CSharp: ErrorCode.InvalidParameters
        VB: ErrorCode.InvalidParameters
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InvalidParameters
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InvalidParameters
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: InvalidParameters
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 28
      summary: "\nInvalid parameter. Invalid use of method.\n* Using an orderRef that previously resulted in completed. The order cannot be collected twice.\n* Using an orderRef that previously resulted in failed. The order cannot be collected twice.\n* Using an orderRef that is too old. completed orders can only be collected up to 3 minutes and failed orders up to 5 minutes.\n* Cancelling an orderRef that is already cancelled. The order cannot be cancelled twice.\n\nRP must not try the same request again.\nThis is an internal error within RP&apos;s system and must not be communicated to the user as a BankID error.\n"
      example: []
      syntax:
        content:
          CSharp: InvalidParameters = 2
          VB: InvalidParameters = 2
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Canceled
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Canceled
      language: CSharp
      name:
        CSharp: Canceled
        VB: Canceled
      nameWithType:
        CSharp: ErrorCode.Canceled
        VB: ErrorCode.Canceled
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Canceled
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Canceled
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: Canceled
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 30
      syntax:
        content:
          CSharp: Canceled = 3
          VB: Canceled = 3
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unauthorized
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unauthorized
      language: CSharp
      name:
        CSharp: Unauthorized
        VB: Unauthorized
      nameWithType:
        CSharp: ErrorCode.Unauthorized
        VB: ErrorCode.Unauthorized
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unauthorized
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Unauthorized
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: Unauthorized
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 33
      syntax:
        content:
          CSharp: Unauthorized = 4
          VB: Unauthorized = 4
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.NotFound
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.NotFound
      language: CSharp
      name:
        CSharp: NotFound
        VB: NotFound
      nameWithType:
        CSharp: ErrorCode.NotFound
        VB: ErrorCode.NotFound
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.NotFound
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.NotFound
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: NotFound
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 36
      syntax:
        content:
          CSharp: NotFound = 5
          VB: NotFound = 5
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.RequestTimeout
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.RequestTimeout
      language: CSharp
      name:
        CSharp: RequestTimeout
        VB: RequestTimeout
      nameWithType:
        CSharp: ErrorCode.RequestTimeout
        VB: ErrorCode.RequestTimeout
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.RequestTimeout
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.RequestTimeout
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: RequestTimeout
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 39
      syntax:
        content:
          CSharp: RequestTimeout = 6
          VB: RequestTimeout = 6
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.UnsupportedMediaType
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.UnsupportedMediaType
      language: CSharp
      name:
        CSharp: UnsupportedMediaType
        VB: UnsupportedMediaType
      nameWithType:
        CSharp: ErrorCode.UnsupportedMediaType
        VB: ErrorCode.UnsupportedMediaType
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.UnsupportedMediaType
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.UnsupportedMediaType
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: UnsupportedMediaType
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 42
      syntax:
        content:
          CSharp: UnsupportedMediaType = 7
          VB: UnsupportedMediaType = 7
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InternalError
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InternalError
      language: CSharp
      name:
        CSharp: InternalError
        VB: InternalError
      nameWithType:
        CSharp: ErrorCode.InternalError
        VB: ErrorCode.InternalError
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InternalError
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.InternalError
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: InternalError
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 45
      syntax:
        content:
          CSharp: InternalError = 8
          VB: InternalError = 8
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Maintenance
      commentId: F:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Maintenance
      language: CSharp
      name:
        CSharp: Maintenance
        VB: Maintenance
      nameWithType:
        CSharp: ErrorCode.Maintenance
        VB: ErrorCode.Maintenance
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Maintenance
        VB: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode.Maintenance
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        id: Maintenance
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/ErrorCode.cs
        startLine: 48
      syntax:
        content:
          CSharp: Maintenance = 9
          VB: Maintenance = 9
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Requirement
    language: CSharp
    name:
      CSharp: Requirement
      VB: Requirement
    nameWithType:
      CSharp: Requirement
      VB: Requirement
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.Requirement
      VB: ActiveLogin.Authentication.BankId.Api.Models.Requirement
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
      id: Requirement
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
      startLine: 8
    summary: "\nRequirements on how the auth or sign order must be performed.\n"
    example: []
    syntax:
      content:
        CSharp: public class Requirement
        VB: Public Class Requirement
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor(System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor(System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
      language: CSharp
      name:
        CSharp: Requirement(List<String>, Nullable<Boolean>, Nullable<Boolean>)
        VB: Requirement(List(Of String), Nullable(Of Boolean), Nullable(Of Boolean))
      nameWithType:
        CSharp: Requirement.Requirement(List<String>, Nullable<Boolean>, Nullable<Boolean>)
        VB: Requirement.Requirement(List(Of String), Nullable(Of Boolean), Nullable(Of Boolean))
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Requirement.Requirement(System.Collections.Generic.List<System.String>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
        VB: ActiveLogin.Authentication.BankId.Api.Models.Requirement.Requirement(System.Collections.Generic.List(Of System.String), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        startLine: 27
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Requirement(List<string> certificatePolicies = null, bool? tokenStartRequired = null, bool? allowFingerprint = null)
          VB: Public Sub New(certificatePolicies As List(Of String) = Nothing, tokenStartRequired As Boolean? = Nothing, allowFingerprint As Boolean? = Nothing)
        parameters:
        - id: certificatePolicies
          type: System.Collections.Generic.List{System.String}
          description: The oid in certificate policies in the user certificate. List of String.
        - id: tokenStartRequired
          type: System.Nullable{System.Boolean}
          description: "\nIf set to true, the client must have been started using the AutoStartToken.\nTo be used if it is important that the BankID App is on the same device as the RP service.\n\nIf set to false, the client does not need to be started using the autoStartToken.\n"
        - id: allowFingerprint
          type: System.Nullable{System.Boolean}
          description: "\nUsers of iOS and Android devices may use fingerprint for authentication and signing if the device supports it and the user configured the device to use it.\nNo other devices are supported at this point.\n\nIf set to true, the users are allowed to use fingerprint.\nIf set to false, the users are not allowed to use fingerprint.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
      language: CSharp
      name:
        CSharp: CertificatePolicies
        VB: CertificatePolicies
      nameWithType:
        CSharp: Requirement.CertificatePolicies
        VB: Requirement.CertificatePolicies
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
        VB: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        id: CertificatePolicies
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        startLine: 37
      summary: "\nThe oid in certificate policies in the user certificate. List of String.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("certificatePolicies")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public List<string> CertificatePolicies { get; }
          VB: >-
            <JsonPropertyName("certificatePolicies")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property CertificatePolicies As List(Of String)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.String}
      overload: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: certificatePolicies
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
      language: CSharp
      name:
        CSharp: TokenStartRequired
        VB: TokenStartRequired
      nameWithType:
        CSharp: Requirement.TokenStartRequired
        VB: Requirement.TokenStartRequired
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
        VB: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        id: TokenStartRequired
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        startLine: 46
      summary: "\nIf set to true, the client must have been started using the AutoStartToken.\nTo be used if it is important that the BankID App is on the same device as the RP service.\n\nIf set to false, the client does not need to be started using the autoStartToken.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("tokenStartRequired")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public bool? TokenStartRequired { get; }
          VB: >-
            <JsonPropertyName("tokenStartRequired")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property TokenStartRequired As Boolean?
        parameters: []
        return:
          type: System.Nullable{System.Boolean}
      overload: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: tokenStartRequired
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
      language: CSharp
      name:
        CSharp: AllowFingerprint
        VB: AllowFingerprint
      nameWithType:
        CSharp: Requirement.AllowFingerprint
        VB: Requirement.AllowFingerprint
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
        VB: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        id: AllowFingerprint
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/Requirement.cs
        startLine: 56
      summary: "\nUsers of iOS and Android devices may use fingerprint for authentication and signing if the device supports it and the user configured the device to use it.\nNo other devices are supported at this point.\n\nIf set to true, the users are allowed to use fingerprint.\nIf set to false, the users are not allowed to use fingerprint.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("allowFingerprint")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public bool? AllowFingerprint { get; }
          VB: >-
            <JsonPropertyName("allowFingerprint")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property AllowFingerprint As Boolean?
        parameters: []
        return:
          type: System.Nullable{System.Boolean}
      overload: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: allowFingerprint
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.SignRequest
    language: CSharp
    name:
      CSharp: SignRequest
      VB: SignRequest
    nameWithType:
      CSharp: SignRequest
      VB: SignRequest
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
      VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
      id: SignRequest
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
      startLine: 9
    summary: "\nSign request parameters.\n"
    example: []
    syntax:
      content:
        CSharp: public class SignRequest
        VB: Public Class SignRequest
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: SignRequest(String, String)
        VB: SignRequest(String, String)
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String)
        VB: SignRequest.SignRequest(String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 24
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData)
          VB: Public Sub New(endUserIp As String, userVisibleData As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: SignRequest(String, String, Byte[])
        VB: SignRequest(String, String, Byte())
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String, Byte[])
        VB: SignRequest.SignRequest(String, String, Byte())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte[])
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte())
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 44
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData, byte[] userNonVisibleData)
          VB: Public Sub New(endUserIp As String, userVisibleData As String, userNonVisibleData As Byte())
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.String,System.Byte[])
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.String,System.Byte[])
      language: CSharp
      name:
        CSharp: SignRequest(String, String, String, Byte[])
        VB: SignRequest(String, String, String, Byte())
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String, String, Byte[])
        VB: SignRequest.SignRequest(String, String, String, Byte())
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.String, System.Byte[])
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.String, System.Byte())
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 68
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData, string userVisibleDataFormat, byte[] userNonVisibleData)
          VB: Public Sub New(endUserIp As String, userVisibleData As String, userVisibleDataFormat As String, userNonVisibleData As Byte())
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userVisibleDataFormat
          type: System.String
          description: "\nIf present, and set to &quot;simpleMarkdownV1&quot;, this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at.\nFor further information of formatting options, please study the document Guidelines for Formatted Text.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: SignRequest(String, String, Byte[], String)
        VB: SignRequest(String, String, Byte(), String)
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String, Byte[], String)
        VB: SignRequest.SignRequest(String, String, Byte(), String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte[], System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte(), System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 92
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber)
          VB: Public Sub New(endUserIp As String, userVisibleData As String, userNonVisibleData As Byte(), personalIdentityNumber As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      language: CSharp
      name:
        CSharp: SignRequest(String, String, Byte[], String, Requirement)
        VB: SignRequest(String, String, Byte(), String, Requirement)
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String, Byte[], String, Requirement)
        VB: SignRequest.SignRequest(String, String, Byte(), String, Requirement)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte[], System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement)
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte(), System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 117
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber, Requirement requirement)
          VB: Public Sub New(endUserIp As String, userVisibleData As String, userNonVisibleData As Byte(), personalIdentityNumber As String, requirement As Requirement)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor(System.String,System.String,System.Byte[],System.String,ActiveLogin.Authentication.BankId.Api.Models.Requirement,System.String)
      language: CSharp
      name:
        CSharp: SignRequest(String, String, Byte[], String, Requirement, String)
        VB: SignRequest(String, String, Byte(), String, Requirement, String)
      nameWithType:
        CSharp: SignRequest.SignRequest(String, String, Byte[], String, Requirement, String)
        VB: SignRequest.SignRequest(String, String, Byte(), String, Requirement, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte[], System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest(System.String, System.String, System.Byte(), System.String, ActiveLogin.Authentication.BankId.Api.Models.Requirement, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 147
      summary: ''
      example: []
      syntax:
        content:
          CSharp: public SignRequest(string endUserIp, string userVisibleData, byte[] userNonVisibleData, string personalIdentityNumber, Requirement requirement, string userVisibleDataFormat)
          VB: Public Sub New(endUserIp As String, userVisibleData As String, userNonVisibleData As Byte(), personalIdentityNumber As String, requirement As Requirement, userVisibleDataFormat As String)
        parameters:
        - id: endUserIp
          type: System.String
          description: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
        - id: userVisibleData
          type: System.String
          description: "\nThe text to be displayed and signed. The text can be formatted using CR, LF and CRLF for new lines.\n"
        - id: userNonVisibleData
          type: System.Byte[]
          description: "\nData not displayed to the user.\n"
        - id: personalIdentityNumber
          type: System.String
          description: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
        - id: requirement
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
          description: Requirements on how the auth or sign order must be performed.
        - id: userVisibleDataFormat
          type: System.String
          description: "\nIf present, and set to &quot;simpleMarkdownV1&quot;, this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at.\nFor further information of formatting options, please study the document Guidelines for Formatted Text.\n"
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
      language: CSharp
      name:
        CSharp: EndUserIp
        VB: EndUserIp
      nameWithType:
        CSharp: SignRequest.EndUserIp
        VB: SignRequest.EndUserIp
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: EndUserIp
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 170
      summary: "\nThe user IP address as seen by RP. IPv4 and IPv6 is allowed.\nNote the importance of using the correct IP address.It must be the IP address representing the user agent (the end user device) as seen by the RP.\nIf there is a proxy for inbound traffic, special considerations may need to be taken to get the correct address.\n\nIn some use cases the IP address is not available, for instance for voice based services.\nIn this case, the internal representation of those systems IP address is ok to use.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("endUserIp")]

            public string EndUserIp { get; }
          VB: >-
            <JsonPropertyName("endUserIp")>

            Public ReadOnly Property EndUserIp As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: endUserIp
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
      language: CSharp
      name:
        CSharp: PersonalIdentityNumber
        VB: PersonalIdentityNumber
      nameWithType:
        CSharp: SignRequest.PersonalIdentityNumber
        VB: SignRequest.PersonalIdentityNumber
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: PersonalIdentityNumber
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 177
      summary: "\nThe personal number of the user. 12 digits, century must be included (YYYYMMDDSSSC).\nIf the personal number is excluded, the client must be started with the AutoStartToken returned in the response.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("personalNumber")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string PersonalIdentityNumber { get; }
          VB: >-
            <JsonPropertyName("personalNumber")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property PersonalIdentityNumber As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: personalNumber
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
      language: CSharp
      name:
        CSharp: Requirement
        VB: Requirement
      nameWithType:
        CSharp: SignRequest.Requirement
        VB: SignRequest.Requirement
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: Requirement
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 183
      summary: "\nRequirements on how the auth or sign order must be performed.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("requirement")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public Requirement Requirement { get; }
          VB: >-
            <JsonPropertyName("requirement")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property Requirement As Requirement
        parameters: []
        return:
          type: ActiveLogin.Authentication.BankId.Api.Models.Requirement
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: requirement
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
      language: CSharp
      name:
        CSharp: UserVisibleData
        VB: UserVisibleData
      nameWithType:
        CSharp: SignRequest.UserVisibleData
        VB: SignRequest.UserVisibleData
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: UserVisibleData
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 189
      summary: "\nThe text to be displayed and signed. String. The text can be formatted using CR, LF and CRLF for new lines.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userVisibleData")]

            public string UserVisibleData { get; }
          VB: >-
            <JsonPropertyName("userVisibleData")>

            Public ReadOnly Property UserVisibleData As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userVisibleData
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
      language: CSharp
      name:
        CSharp: UserVisibleDataFormat
        VB: UserVisibleDataFormat
      nameWithType:
        CSharp: SignRequest.UserVisibleDataFormat
        VB: SignRequest.UserVisibleDataFormat
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: UserVisibleDataFormat
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 196
      summary: "\nIf present, and set to &quot;simpleMarkdownV1&quot;, this parameter indicates that userVisibleData holds formatting characters which, if used correctly, will make the text displayed with the user nicer to look at.\nFor further information of formatting options, please study the document Guidelines for Formatted Text.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userVisibleDataFormat")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string UserVisibleDataFormat { get; }
          VB: >-
            <JsonPropertyName("userVisibleDataFormat")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property UserVisibleDataFormat As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userVisibleDataFormat
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
      language: CSharp
      name:
        CSharp: UserNonVisibleData
        VB: UserNonVisibleData
      nameWithType:
        CSharp: SignRequest.UserNonVisibleData
        VB: SignRequest.UserNonVisibleData
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        id: UserNonVisibleData
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignRequest.cs
        startLine: 202
      summary: "\nData not displayed to the user.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("userNonVisibleData")]

            [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]

            public string UserNonVisibleData { get; }
          VB: >-
            <JsonPropertyName("userNonVisibleData")>

            <JsonIgnore(Condition:=JsonIgnoreCondition.WhenWritingDefault)>

            Public ReadOnly Property UserNonVisibleData As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: userNonVisibleData
      - type: System.Text.Json.Serialization.JsonIgnoreAttribute
        ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Condition
          type: System.Text.Json.Serialization.JsonIgnoreCondition
          value: 2
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.SignResponse
    language: CSharp
    name:
      CSharp: SignResponse
      VB: SignResponse
    nameWithType:
      CSharp: SignResponse
      VB: SignResponse
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
      VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
      id: SignResponse
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
      startLine: 7
    summary: "\nSign response result.\n"
    example: []
    syntax:
      content:
        CSharp: public class SignResponse
        VB: Public Class SignResponse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SignResponse(String, String, String, String)
        VB: SignResponse(String, String, String, String)
      nameWithType:
        CSharp: SignResponse.SignResponse(String, String, String, String)
        VB: SignResponse.SignResponse(String, String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.SignResponse(System.String, System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.SignResponse(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        startLine: 9
      syntax:
        content:
          CSharp: public SignResponse(string orderRef, string autoStartToken, string qrStartToken, string qrStartSecret)
          VB: Public Sub New(orderRef As String, autoStartToken As String, qrStartToken As String, qrStartSecret As String)
        parameters:
        - id: orderRef
          type: System.String
        - id: autoStartToken
          type: System.String
        - id: qrStartToken
          type: System.String
        - id: qrStartSecret
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
      language: CSharp
      name:
        CSharp: OrderRef
        VB: OrderRef
      nameWithType:
        CSharp: SignResponse.OrderRef
        VB: SignResponse.OrderRef
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        id: OrderRef
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        startLine: 20
      summary: "\nUsed to collect the status of the order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("orderRef")]

            public string OrderRef { get; }
          VB: >-
            <JsonPropertyName("orderRef")>

            Public ReadOnly Property OrderRef As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: orderRef
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
      language: CSharp
      name:
        CSharp: AutoStartToken
        VB: AutoStartToken
      nameWithType:
        CSharp: SignResponse.AutoStartToken
        VB: SignResponse.AutoStartToken
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        id: AutoStartToken
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        startLine: 26
      summary: "\nUsed as reference to this order when the client is started automatically.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("autoStartToken")]

            public string AutoStartToken { get; }
          VB: >-
            <JsonPropertyName("autoStartToken")>

            Public ReadOnly Property AutoStartToken As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: autoStartToken
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
      language: CSharp
      name:
        CSharp: QrStartToken
        VB: QrStartToken
      nameWithType:
        CSharp: SignResponse.QrStartToken
        VB: SignResponse.QrStartToken
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        id: QrStartToken
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        startLine: 32
      summary: "\nUsed to compute the animated QR code.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("qrStartToken")]

            public string QrStartToken { get; }
          VB: >-
            <JsonPropertyName("qrStartToken")>

            Public ReadOnly Property QrStartToken As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: qrStartToken
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
      language: CSharp
      name:
        CSharp: QrStartSecret
        VB: QrStartSecret
      nameWithType:
        CSharp: SignResponse.QrStartSecret
        VB: SignResponse.QrStartSecret
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
        VB: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        id: QrStartSecret
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/SignResponse.cs
        startLine: 38
      summary: "\nUsed to compute the animated QR code.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("qrStartSecret")]

            public string QrStartSecret { get; }
          VB: >-
            <JsonPropertyName("qrStartSecret")>

            Public ReadOnly Property QrStartSecret As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: qrStartSecret
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ActiveLogin.Authentication.BankId.Api.Models.User
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.User
    language: CSharp
    name:
      CSharp: User
      VB: User
    nameWithType:
      CSharp: User
      VB: User
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.Models.User
      VB: ActiveLogin.Authentication.BankId.Api.Models.User
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.Models
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
      id: User
      path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
      startLine: 7
    summary: "\nInformation related to the user.\n"
    example: []
    syntax:
      content:
        CSharp: public class User
        VB: Public Class User
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.Models.User.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:ActiveLogin.Authentication.BankId.Api.Models.User.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: User(String, String, String, String)
        VB: User(String, String, String, String)
      nameWithType:
        CSharp: User.User(String, String, String, String)
        VB: User.User(String, String, String, String)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.User.User(System.String, System.String, System.String, System.String)
        VB: ActiveLogin.Authentication.BankId.Api.Models.User.User(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        id: .ctor
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        startLine: 9
      syntax:
        content:
          CSharp: public User(string personalIdentityNumber, string name, string givenName, string surname)
          VB: Public Sub New(personalIdentityNumber As String, name As String, givenName As String, surname As String)
        parameters:
        - id: personalIdentityNumber
          type: System.String
        - id: name
          type: System.String
        - id: givenName
          type: System.String
        - id: surname
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.User.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
      language: CSharp
      name:
        CSharp: PersonalIdentityNumber
        VB: PersonalIdentityNumber
      nameWithType:
        CSharp: User.PersonalIdentityNumber
        VB: User.PersonalIdentityNumber
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
        VB: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        id: PersonalIdentityNumber
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        startLine: 20
      summary: "\nThe personal number.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("personalNumber")]

            public string PersonalIdentityNumber { get; }
          VB: >-
            <JsonPropertyName("personalNumber")>

            Public ReadOnly Property PersonalIdentityNumber As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: personalNumber
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.User.Name
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.User.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: User.Name
        VB: User.Name
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.User.Name
        VB: ActiveLogin.Authentication.BankId.Api.Models.User.Name
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        id: Name
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        startLine: 26
      summary: "\nThe given name and surname of the user.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("name")]

            public string Name { get; }
          VB: >-
            <JsonPropertyName("name")>

            Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.User.Name*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: name
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
      language: CSharp
      name:
        CSharp: GivenName
        VB: GivenName
      nameWithType:
        CSharp: User.GivenName
        VB: User.GivenName
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
        VB: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        id: GivenName
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        startLine: 32
      summary: "\nThe given name of the user.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("givenName")]

            public string GivenName { get; }
          VB: >-
            <JsonPropertyName("givenName")>

            Public ReadOnly Property GivenName As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: givenName
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ActiveLogin.Authentication.BankId.Api.Models.User.Surname
      commentId: P:ActiveLogin.Authentication.BankId.Api.Models.User.Surname
      language: CSharp
      name:
        CSharp: Surname
        VB: Surname
      nameWithType:
        CSharp: User.Surname
        VB: User.Surname
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.Models.User.Surname
        VB: ActiveLogin.Authentication.BankId.Api.Models.User.Surname
      type: Property
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.Models
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        id: Surname
        path: ../src/ActiveLogin.Authentication.BankId.Api/Models/User.cs
        startLine: 38
      summary: "\nThe surname of the user.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [JsonPropertyName("surname")]

            public string Surname { get; }
          VB: >-
            <JsonPropertyName("surname")>

            Public ReadOnly Property Surname As String
        parameters: []
        return:
          type: System.String
      overload: ActiveLogin.Authentication.BankId.Api.Models.User.Surname*
      attributes:
      - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
        ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: surname
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: ActiveLogin.Authentication.BankId.Api.UserMessage
  commentId: N:ActiveLogin.Authentication.BankId.Api.UserMessage
  language: CSharp
  name:
    CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage
    VB: ActiveLogin.Authentication.BankId.Api.UserMessage
  nameWithType:
    CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage
    VB: ActiveLogin.Authentication.BankId.Api.UserMessage
  qualifiedName:
    CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage
    VB: ActiveLogin.Authentication.BankId.Api.UserMessage
  type: Namespace
  assemblies:
  - ActiveLogin.Authentication.BankId.Api
  modifiers: {}
  items:
  - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
    language: CSharp
    name:
      CSharp: BankIdRecommendedUserMessage
      VB: BankIdRecommendedUserMessage
    nameWithType:
      CSharp: BankIdRecommendedUserMessage
      VB: BankIdRecommendedUserMessage
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
      VB: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
    type: Class
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
      id: BankIdRecommendedUserMessage
      path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
      startLine: 6
    syntax:
      content:
        CSharp: 'public class BankIdRecommendedUserMessage : IBankIdUserMessage'
        VB: >-
          Public Class BankIdRecommendedUserMessage

              Implements IBankIdUserMessage
    inheritance:
    - System.Object
    implements:
    - ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
      commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
        VB: GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
      nameWithType:
        CSharp: BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
        VB: BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode, System.Boolean, System.Boolean, System.Boolean)
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode, System.Boolean, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
        id: GetMessageShortNameForCollectResponse
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
        startLine: 43
      syntax:
        content:
          CSharp: public MessageShortName GetMessageShortNameForCollectResponse(CollectStatus collectStatus, CollectHintCode hintCode, bool authPersonalIdentityNumberProvided, bool accessedFromMobileDevice, bool usingQrCode)
          VB: Public Function GetMessageShortNameForCollectResponse(collectStatus As CollectStatus, hintCode As CollectHintCode, authPersonalIdentityNumberProvided As Boolean, accessedFromMobileDevice As Boolean, usingQrCode As Boolean) As MessageShortName
        parameters:
        - id: collectStatus
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        - id: hintCode
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        - id: authPersonalIdentityNumberProvided
          type: System.Boolean
        - id: accessedFromMobileDevice
          type: System.Boolean
        - id: usingQrCode
          type: System.Boolean
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      overload: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse*
      implements:
      - ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      language: CSharp
      name:
        CSharp: GetMessageShortNameForErrorResponse(ErrorCode)
        VB: GetMessageShortNameForErrorResponse(ErrorCode)
      nameWithType:
        CSharp: BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ErrorCode)
        VB: BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ErrorCode)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
        id: GetMessageShortNameForErrorResponse
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/BankIdRecommendedUserMessage.cs
        startLine: 61
      syntax:
        content:
          CSharp: public MessageShortName GetMessageShortNameForErrorResponse(ErrorCode errorCode)
          VB: Public Function GetMessageShortNameForErrorResponse(errorCode As ErrorCode) As MessageShortName
        parameters:
        - id: errorCode
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      overload: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse*
      implements:
      - ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    language: CSharp
    name:
      CSharp: IBankIdUserMessage
      VB: IBankIdUserMessage
    nameWithType:
      CSharp: IBankIdUserMessage
      VB: IBankIdUserMessage
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
      VB: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    type: Interface
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
      id: IBankIdUserMessage
      path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
      startLine: 4
    syntax:
      content:
        CSharp: public interface IBankIdUserMessage
        VB: Public Interface IBankIdUserMessage
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
      commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
        VB: GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
      nameWithType:
        CSharp: IBankIdUserMessage.GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
        VB: IBankIdUserMessage.GetMessageShortNameForCollectResponse(CollectStatus, CollectHintCode, Boolean, Boolean, Boolean)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode, System.Boolean, System.Boolean, System.Boolean)
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus, ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode, System.Boolean, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
        id: GetMessageShortNameForCollectResponse
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
        startLine: 6
      syntax:
        content:
          CSharp: MessageShortName GetMessageShortNameForCollectResponse(CollectStatus collectStatus, CollectHintCode hintCode, bool authPersonalIdentityNumberProvided, bool accessedFromMobileDevice, bool usingQrCode)
          VB: Function GetMessageShortNameForCollectResponse(collectStatus As CollectStatus, hintCode As CollectHintCode, authPersonalIdentityNumberProvided As Boolean, accessedFromMobileDevice As Boolean, usingQrCode As Boolean) As MessageShortName
        parameters:
        - id: collectStatus
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        - id: hintCode
          type: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        - id: authPersonalIdentityNumberProvided
          type: System.Boolean
        - id: accessedFromMobileDevice
          type: System.Boolean
        - id: usingQrCode
          type: System.Boolean
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      overload: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse*
      modifiers:
        CSharp: []
        VB: []
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      language: CSharp
      name:
        CSharp: GetMessageShortNameForErrorResponse(ErrorCode)
        VB: GetMessageShortNameForErrorResponse(ErrorCode)
      nameWithType:
        CSharp: IBankIdUserMessage.GetMessageShortNameForErrorResponse(ErrorCode)
        VB: IBankIdUserMessage.GetMessageShortNameForErrorResponse(ErrorCode)
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
      type: Method
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
        id: GetMessageShortNameForErrorResponse
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/IBankIdUserMessage.cs
        startLine: 13
      syntax:
        content:
          CSharp: MessageShortName GetMessageShortNameForErrorResponse(ErrorCode errorCode)
          VB: Function GetMessageShortNameForErrorResponse(errorCode As ErrorCode) As MessageShortName
        parameters:
        - id: errorCode
          type: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      overload: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse*
      modifiers:
        CSharp: []
        VB: []
  - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
    language: CSharp
    name:
      CSharp: MessageShortName
      VB: MessageShortName
    nameWithType:
      CSharp: MessageShortName
      VB: MessageShortName
    qualifiedName:
      CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
    type: Enum
    assemblies:
    - ActiveLogin.Authentication.BankId.Api
    namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
    source:
      remote:
        path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
      id: MessageShortName
      path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
      startLine: 2
    syntax:
      content:
        CSharp: public enum MessageShortName
        VB: Public Enum MessageShortName
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.Unknown
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: MessageShortName.Unknown
        VB: MessageShortName.Unknown
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.Unknown
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.Unknown
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: Unknown
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 4
      syntax:
        content:
          CSharp: Unknown = 0
          VB: Unknown = 0
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1
      language: CSharp
      name:
        CSharp: RFA1
        VB: RFA1
      nameWithType:
        CSharp: MessageShortName.RFA1
        VB: MessageShortName.RFA1
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA1
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 6
      syntax:
        content:
          CSharp: RFA1 = 1
          VB: RFA1 = 1
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1QR
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1QR
      language: CSharp
      name:
        CSharp: RFA1QR
        VB: RFA1QR
      nameWithType:
        CSharp: MessageShortName.RFA1QR
        VB: MessageShortName.RFA1QR
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1QR
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA1QR
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA1QR
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 7
      syntax:
        content:
          CSharp: RFA1QR = 2
          VB: RFA1QR = 2
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA2
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA2
      language: CSharp
      name:
        CSharp: RFA2
        VB: RFA2
      nameWithType:
        CSharp: MessageShortName.RFA2
        VB: MessageShortName.RFA2
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA2
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA2
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA2
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 8
      syntax:
        content:
          CSharp: RFA2 = 3
          VB: RFA2 = 3
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA3
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA3
      language: CSharp
      name:
        CSharp: RFA3
        VB: RFA3
      nameWithType:
        CSharp: MessageShortName.RFA3
        VB: MessageShortName.RFA3
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA3
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA3
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA3
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 9
      syntax:
        content:
          CSharp: RFA3 = 4
          VB: RFA3 = 4
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA4
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA4
      language: CSharp
      name:
        CSharp: RFA4
        VB: RFA4
      nameWithType:
        CSharp: MessageShortName.RFA4
        VB: MessageShortName.RFA4
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA4
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA4
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA4
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 10
      syntax:
        content:
          CSharp: RFA4 = 5
          VB: RFA4 = 5
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA5
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA5
      language: CSharp
      name:
        CSharp: RFA5
        VB: RFA5
      nameWithType:
        CSharp: MessageShortName.RFA5
        VB: MessageShortName.RFA5
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA5
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA5
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA5
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 11
      syntax:
        content:
          CSharp: RFA5 = 6
          VB: RFA5 = 6
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA6
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA6
      language: CSharp
      name:
        CSharp: RFA6
        VB: RFA6
      nameWithType:
        CSharp: MessageShortName.RFA6
        VB: MessageShortName.RFA6
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA6
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA6
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA6
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 12
      syntax:
        content:
          CSharp: RFA6 = 7
          VB: RFA6 = 7
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA8
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA8
      language: CSharp
      name:
        CSharp: RFA8
        VB: RFA8
      nameWithType:
        CSharp: MessageShortName.RFA8
        VB: MessageShortName.RFA8
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA8
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA8
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA8
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 13
      syntax:
        content:
          CSharp: RFA8 = 8
          VB: RFA8 = 8
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA9
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA9
      language: CSharp
      name:
        CSharp: RFA9
        VB: RFA9
      nameWithType:
        CSharp: MessageShortName.RFA9
        VB: MessageShortName.RFA9
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA9
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA9
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA9
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 14
      syntax:
        content:
          CSharp: RFA9 = 9
          VB: RFA9 = 9
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA13
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA13
      language: CSharp
      name:
        CSharp: RFA13
        VB: RFA13
      nameWithType:
        CSharp: MessageShortName.RFA13
        VB: MessageShortName.RFA13
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA13
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA13
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA13
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 15
      syntax:
        content:
          CSharp: RFA13 = 10
          VB: RFA13 = 10
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14A
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14A
      language: CSharp
      name:
        CSharp: RFA14A
        VB: RFA14A
      nameWithType:
        CSharp: MessageShortName.RFA14A
        VB: MessageShortName.RFA14A
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14A
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14A
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA14A
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 16
      syntax:
        content:
          CSharp: RFA14A = 11
          VB: RFA14A = 11
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14B
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14B
      language: CSharp
      name:
        CSharp: RFA14B
        VB: RFA14B
      nameWithType:
        CSharp: MessageShortName.RFA14B
        VB: MessageShortName.RFA14B
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14B
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA14B
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA14B
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 17
      syntax:
        content:
          CSharp: RFA14B = 12
          VB: RFA14B = 12
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15A
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15A
      language: CSharp
      name:
        CSharp: RFA15A
        VB: RFA15A
      nameWithType:
        CSharp: MessageShortName.RFA15A
        VB: MessageShortName.RFA15A
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15A
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15A
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA15A
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 18
      syntax:
        content:
          CSharp: RFA15A = 13
          VB: RFA15A = 13
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15B
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15B
      language: CSharp
      name:
        CSharp: RFA15B
        VB: RFA15B
      nameWithType:
        CSharp: MessageShortName.RFA15B
        VB: MessageShortName.RFA15B
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15B
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA15B
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA15B
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 19
      syntax:
        content:
          CSharp: RFA15B = 14
          VB: RFA15B = 14
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA16
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA16
      language: CSharp
      name:
        CSharp: RFA16
        VB: RFA16
      nameWithType:
        CSharp: MessageShortName.RFA16
        VB: MessageShortName.RFA16
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA16
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA16
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA16
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 20
      syntax:
        content:
          CSharp: RFA16 = 15
          VB: RFA16 = 15
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17A
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17A
      language: CSharp
      name:
        CSharp: RFA17A
        VB: RFA17A
      nameWithType:
        CSharp: MessageShortName.RFA17A
        VB: MessageShortName.RFA17A
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17A
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17A
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA17A
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 21
      syntax:
        content:
          CSharp: RFA17A = 16
          VB: RFA17A = 16
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17B
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17B
      language: CSharp
      name:
        CSharp: RFA17B
        VB: RFA17B
      nameWithType:
        CSharp: MessageShortName.RFA17B
        VB: MessageShortName.RFA17B
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17B
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA17B
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA17B
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 22
      syntax:
        content:
          CSharp: RFA17B = 17
          VB: RFA17B = 17
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA18
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA18
      language: CSharp
      name:
        CSharp: RFA18
        VB: RFA18
      nameWithType:
        CSharp: MessageShortName.RFA18
        VB: MessageShortName.RFA18
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA18
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA18
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA18
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 23
      syntax:
        content:
          CSharp: RFA18 = 18
          VB: RFA18 = 18
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA19
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA19
      language: CSharp
      name:
        CSharp: RFA19
        VB: RFA19
      nameWithType:
        CSharp: MessageShortName.RFA19
        VB: MessageShortName.RFA19
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA19
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA19
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA19
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 24
      syntax:
        content:
          CSharp: RFA19 = 19
          VB: RFA19 = 19
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA20
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA20
      language: CSharp
      name:
        CSharp: RFA20
        VB: RFA20
      nameWithType:
        CSharp: MessageShortName.RFA20
        VB: MessageShortName.RFA20
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA20
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA20
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA20
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 25
      syntax:
        content:
          CSharp: RFA20 = 20
          VB: RFA20 = 20
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA21
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA21
      language: CSharp
      name:
        CSharp: RFA21
        VB: RFA21
      nameWithType:
        CSharp: MessageShortName.RFA21
        VB: MessageShortName.RFA21
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA21
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA21
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA21
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 26
      syntax:
        content:
          CSharp: RFA21 = 21
          VB: RFA21 = 21
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA22
      commentId: F:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA22
      language: CSharp
      name:
        CSharp: RFA22
        VB: RFA22
      nameWithType:
        CSharp: MessageShortName.RFA22
        VB: MessageShortName.RFA22
      qualifiedName:
        CSharp: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA22
        VB: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName.RFA22
      type: Field
      assemblies:
      - ActiveLogin.Authentication.BankId.Api
      namespace: ActiveLogin.Authentication.BankId.Api.UserMessage
      source:
        remote:
          path: C:/Users/jonas/source/repos/DocFx_Example/src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        id: RFA22
        path: ../src/ActiveLogin.Authentication.BankId.Api/UserMessage/MessageShortName.cs
        startLine: 27
      syntax:
        content:
          CSharp: RFA22 = 22
          VB: RFA22 = 22
        return:
          type: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  ActiveLogin.Authentication.BankId.Api:
    name:
      CSharp:
      - name: ActiveLogin.Authentication.BankId.Api
        nameWithType: ActiveLogin.Authentication.BankId.Api
        qualifiedName: ActiveLogin.Authentication.BankId.Api
      VB:
      - name: ActiveLogin.Authentication.BankId.Api
        nameWithType: ActiveLogin.Authentication.BankId.Api
        qualifiedName: ActiveLogin.Authentication.BankId.Api
    isDefinition: true
    commentId: N:ActiveLogin.Authentication.BankId.Api
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api
    commentId: T:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
        name: BankIdApiClientExtensions
        nameWithType: BankIdApiClientExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
        name: BankIdApiClientExtensions
        nameWithType: BankIdApiClientExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(System.String,System.String,System.String)
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[])
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[])
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(System.String,System.String,System.Byte[],System.String)
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String,System.String,System.Byte[],System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(System.String)
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ? ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
        name: IBankIdApiClient
        nameWithType: IBankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ? ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(System.String)
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
    parent: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync(ActiveLogin.Authentication.BankId.Api.IBankIdApiClient,System.String)
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
        name: BankIdApiClient
        nameWithType: BankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
        name: BankIdApiClient
        nameWithType: BankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiClient
  System.Net.Http.HttpClient:
    name:
      CSharp:
      - id: System.Net.Http.HttpClient
        name: HttpClient
        nameWithType: HttpClient
        qualifiedName: System.Net.Http.HttpClient
        isExternal: true
      VB:
      - id: System.Net.Http.HttpClient
        name: HttpClient
        nameWithType: HttpClient
        qualifiedName: System.Net.Http.HttpClient
        isExternal: true
    isDefinition: true
    parent: System.Net.Http
    commentId: T:System.Net.Http.HttpClient
  System.Net.Http:
    name:
      CSharp:
      - name: System.Net.Http
        nameWithType: System.Net.Http
        qualifiedName: System.Net.Http
        isExternal: true
      VB:
      - name: System.Net.Http
        nameWithType: System.Net.Http
        qualifiedName: System.Net.Http
    isDefinition: true
    commentId: N:System.Net.Http
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor*
        name: BankIdApiClient
        nameWithType: BankIdApiClient.BankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.BankIdApiClient
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor*
        name: BankIdApiClient
        nameWithType: BankIdApiClient.BankIdApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.BankIdApiClient
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.#ctor
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
        name: AuthResponse
        nameWithType: AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
        name: AuthResponse
        nameWithType: AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.AuthResponse}
  ActiveLogin.Authentication.BankId.Api.Models:
    name:
      CSharp:
      - name: ActiveLogin.Authentication.BankId.Api.Models
        nameWithType: ActiveLogin.Authentication.BankId.Api.Models
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models
      VB:
      - name: ActiveLogin.Authentication.BankId.Api.Models
        nameWithType: ActiveLogin.Authentication.BankId.Api.Models
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models
    isDefinition: true
    commentId: N:ActiveLogin.Authentication.BankId.Api.Models
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        name: AuthRequest
        nameWithType: AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        name: AuthRequest
        nameWithType: AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.AuthAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest):
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
        name: AuthAsync
        nameWithType: IBankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        name: AuthRequest
        nameWithType: AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
        name: AuthAsync
        nameWithType: IBankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
        name: AuthRequest
        nameWithType: AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync(ActiveLogin.Authentication.BankId.Api.Models.AuthRequest)
  System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
        name: SignResponse
        nameWithType: SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
        name: SignResponse
        nameWithType: SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.SignResponse}
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        name: SignRequest
        nameWithType: SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        name: SignRequest
        nameWithType: SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.SignRequest
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync*
        name: SignAsync
        nameWithType: BankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync*
        name: SignAsync
        nameWithType: BankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.SignAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest):
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
        name: SignAsync
        nameWithType: IBankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        name: SignRequest
        nameWithType: SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
        name: SignAsync
        nameWithType: IBankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
        name: SignRequest
        nameWithType: SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync(ActiveLogin.Authentication.BankId.Api.Models.SignRequest)
  System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CollectResponse}
  ActiveLogin.Authentication.BankId.Api.Models.CollectRequest:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        name: CollectRequest
        nameWithType: CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        name: CollectRequest
        nameWithType: CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CollectAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest):
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
        name: CollectAsync
        nameWithType: IBankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        name: CollectRequest
        nameWithType: CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
        name: CollectAsync
        nameWithType: IBankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
        name: CollectRequest
        nameWithType: CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync(ActiveLogin.Authentication.BankId.Api.Models.CollectRequest)
  System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
        name: CancelResponse
        nameWithType: CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
        name: CancelResponse
        nameWithType: CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{ActiveLogin.Authentication.BankId.Api.Models.CancelResponse}
  ActiveLogin.Authentication.BankId.Api.Models.CancelRequest:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        name: CancelRequest
        nameWithType: CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        name: CancelRequest
        nameWithType: CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
  ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClient.CancelAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest):
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
        name: CancelAsync
        nameWithType: IBankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        name: CancelRequest
        nameWithType: CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
        name: CancelAsync
        nameWithType: IBankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
        name: CancelRequest
        nameWithType: CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient
    commentId: M:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync(ActiveLogin.Authentication.BankId.Api.Models.CancelRequest)
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdApiClientExtensions.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.AuthAsync
  ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync*
        name: SignAsync
        nameWithType: BankIdApiClientExtensions.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.SignAsync
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdApiClientExtensions.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CollectAsync
  ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdApiClientExtensions.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiClientExtensions.CancelAsync
  System.Net.Http.HttpRequestException:
    name:
      CSharp:
      - id: System.Net.Http.HttpRequestException
        name: HttpRequestException
        nameWithType: HttpRequestException
        qualifiedName: System.Net.Http.HttpRequestException
        isExternal: true
      VB:
      - id: System.Net.Http.HttpRequestException
        name: HttpRequestException
        nameWithType: HttpRequestException
        qualifiedName: System.Net.Http.HttpRequestException
        isExternal: true
    isDefinition: true
    parent: System.Net.Http
    commentId: T:System.Net.Http.HttpRequestException
  System.Net.Http.HttpRequestException.StatusCode:
    name:
      CSharp:
      - id: System.Net.Http.HttpRequestException.StatusCode
        name: StatusCode
        nameWithType: HttpRequestException.StatusCode
        qualifiedName: System.Net.Http.HttpRequestException.StatusCode
        isExternal: true
      VB:
      - id: System.Net.Http.HttpRequestException.StatusCode
        name: StatusCode
        nameWithType: HttpRequestException.StatusCode
        qualifiedName: System.Net.Http.HttpRequestException.StatusCode
        isExternal: true
    isDefinition: true
    parent: System.Net.Http.HttpRequestException
    commentId: P:System.Net.Http.HttpRequestException.StatusCode
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  System.Exception.GetBaseException:
    name:
      CSharp:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetBaseException
  System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext):
    name:
      CSharp:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  System.Exception.GetType:
    name:
      CSharp:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetType
  System.Exception.ToString:
    name:
      CSharp:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.ToString
  System.Exception.Data:
    name:
      CSharp:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
      VB:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Data
  System.Exception.HelpLink:
    name:
      CSharp:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
      VB:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HelpLink
  System.Exception.HResult:
    name:
      CSharp:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
      VB:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HResult
  System.Exception.InnerException:
    name:
      CSharp:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
      VB:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.InnerException
  System.Exception.Message:
    name:
      CSharp:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
      VB:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Message
  System.Exception.Source:
    name:
      CSharp:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
      VB:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Source
  System.Exception.StackTrace:
    name:
      CSharp:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
      VB:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.StackTrace
  System.Exception.TargetSite:
    name:
      CSharp:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
      VB:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.TargetSite
  System.Exception.SerializeObjectState:
    name:
      CSharp:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
      VB:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: E:System.Exception.SerializeObjectState
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.ISerializable:
    name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.ISerializable
  ActiveLogin.Authentication.BankId.Api.Models.ErrorCode:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        name: ErrorCode
        nameWithType: ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        name: ErrorCode
        nameWithType: ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
  ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode*
        name: ErrorCode
        nameWithType: BankIdApiException.ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode*
        name: ErrorCode
        nameWithType: BankIdApiException.ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorCode
  ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails*
        name: ErrorDetails
        nameWithType: BankIdApiException.ErrorDetails
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails*
        name: ErrorDetails
        nameWithType: BankIdApiException.ErrorDetails
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdApiException.ErrorDetails
  ActiveLogin.Authentication.BankId.Api.BankIdApiException:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException
        name: BankIdApiException
        nameWithType: BankIdApiException
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdApiException
        name: BankIdApiException
        nameWithType: BankIdApiException
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdApiException
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdApiException
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
        name: BankIdSimulatedApiClient
        nameWithType: BankIdSimulatedApiClient.BankIdSimulatedApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor*
        name: BankIdSimulatedApiClient
        nameWithType: BankIdSimulatedApiClient.BankIdSimulatedApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.BankIdSimulatedApiClient
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.#ctor
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
        name: BankIdSimulatedApiClient.CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
        name: BankIdSimulatedApiClient.CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState}
  System.TimeSpan:
    name:
      CSharp:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
      VB:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.TimeSpan
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay*
        name: Delay
        nameWithType: BankIdSimulatedApiClient.Delay
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay*
        name: Delay
        nameWithType: BankIdSimulatedApiClient.Delay
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.Delay
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdSimulatedApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: BankIdSimulatedApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.AuthAsync
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync*
        name: SignAsync
        nameWithType: BankIdSimulatedApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync*
        name: SignAsync
        nameWithType: BankIdSimulatedApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.SignAsync
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdSimulatedApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: BankIdSimulatedApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectAsync
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdSimulatedApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: BankIdSimulatedApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CancelAsync
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
        name: BankIdSimulatedApiClient
        nameWithType: BankIdSimulatedApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
        name: BankIdSimulatedApiClient
        nameWithType: BankIdSimulatedApiClient
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient
  ActiveLogin.Authentication.BankId.Api.Models.CollectStatus:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        name: CollectStatus
        nameWithType: CollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        name: CollectStatus
        nameWithType: CollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
  ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        name: CollectHintCode
        nameWithType: CollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        name: CollectHintCode
        nameWithType: CollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor*
        name: CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.CollectState
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor*
        name: CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.CollectState
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.#ctor
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status*
        name: Status
        nameWithType: BankIdSimulatedApiClient.CollectState.Status
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status*
        name: Status
        nameWithType: BankIdSimulatedApiClient.CollectState.Status
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.Status
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode*
        name: HintCode
        nameWithType: BankIdSimulatedApiClient.CollectState.HintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode*
        name: HintCode
        nameWithType: BankIdSimulatedApiClient.CollectState.HintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState.HintCode
  ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
        name: BankIdSimulatedApiClient.CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
        name: BankIdSimulatedApiClient.CollectState
        nameWithType: BankIdSimulatedApiClient.CollectState
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdSimulatedApiClient.CollectState
  System.Uri:
    name:
      CSharp:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      VB:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Uri
  ActiveLogin.Authentication.BankId.Api.BankIdUrls:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdUrls
        name: BankIdUrls
        nameWithType: BankIdUrls
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdUrls
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdUrls
        name: BankIdUrls
        nameWithType: BankIdUrls
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdUrls
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdUrls
  ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
        name: BankIdUserVisibleDataFormats
        nameWithType: BankIdUserVisibleDataFormats
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
        name: BankIdUserVisibleDataFormats
        nameWithType: BankIdUserVisibleDataFormats
        qualifiedName: ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.BankIdUserVisibleDataFormats
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: IBankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync*
        name: AuthAsync
        nameWithType: IBankIdApiClient.AuthAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.AuthAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync*
        name: SignAsync
        nameWithType: IBankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync*
        name: SignAsync
        nameWithType: IBankIdApiClient.SignAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.SignAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: IBankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync*
        name: CollectAsync
        nameWithType: IBankIdApiClient.CollectAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CollectAsync
  ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: IBankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync*
        name: CancelAsync
        nameWithType: IBankIdApiClient.CancelAsync
        qualifiedName: ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.IBankIdApiClient.CancelAsync
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy[]:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        name: BankIdCertificatePolicy
        nameWithType: BankIdCertificatePolicy
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        name: BankIdCertificatePolicy
        nameWithType: BankIdCertificatePolicy
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment*
        name: GetPoliciesForProductionEnvironment
        nameWithType: BankIdCertificatePolicies.GetPoliciesForProductionEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment*
        name: GetPoliciesForProductionEnvironment
        nameWithType: BankIdCertificatePolicies.GetPoliciesForProductionEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForProductionEnvironment
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment*
        name: GetPoliciesForTestEnvironment
        nameWithType: BankIdCertificatePolicies.GetPoliciesForTestEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment*
        name: GetPoliciesForTestEnvironment
        nameWithType: BankIdCertificatePolicies.GetPoliciesForTestEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPoliciesForTestEnvironment
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies:
    name:
      CSharp:
      - name: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
        nameWithType: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
      VB:
      - name: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
        nameWithType: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    isDefinition: true
    commentId: N:ActiveLogin.Authentication.BankId.Api.CertificatePolicies
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        name: BankIdCertificatePolicy
        nameWithType: BankIdCertificatePolicy
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
        name: BankIdCertificatePolicy
        nameWithType: BankIdCertificatePolicy
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.CertificatePolicies
    commentId: T:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicy
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment*
        name: GetPolicyForProductionEnvironment
        nameWithType: BankIdCertificatePolicies.GetPolicyForProductionEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment*
        name: GetPolicyForProductionEnvironment
        nameWithType: BankIdCertificatePolicies.GetPolicyForProductionEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForProductionEnvironment
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment*
        name: GetPolicyForTestEnvironment
        nameWithType: BankIdCertificatePolicies.GetPolicyForTestEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment*
        name: GetPolicyForTestEnvironment
        nameWithType: BankIdCertificatePolicies.GetPolicyForTestEnvironment
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies.GetPolicyForTestEnvironment
  ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
        name: BankIdCertificatePolicies
        nameWithType: BankIdCertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
        name: BankIdCertificatePolicies
        nameWithType: BankIdCertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.CertificatePolicies.BankIdCertificatePolicies
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
        name: AuthRequest
        nameWithType: AuthRequest.AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor*
        name: AuthRequest
        nameWithType: AuthRequest.AuthRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.AuthRequest
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.Requirement:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement
        name: Requirement
        nameWithType: Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement
        name: Requirement
        nameWithType: Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Requirement
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp*
        name: EndUserIp
        nameWithType: AuthRequest.EndUserIp
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp*
        name: EndUserIp
        nameWithType: AuthRequest.EndUserIp
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.EndUserIp
  System.Text.Json.Serialization:
    name:
      CSharp:
      - name: System.Text.Json.Serialization
        nameWithType: System.Text.Json.Serialization
        qualifiedName: System.Text.Json.Serialization
        isExternal: true
      VB:
      - name: System.Text.Json.Serialization
        nameWithType: System.Text.Json.Serialization
        qualifiedName: System.Text.Json.Serialization
    isDefinition: true
    commentId: N:System.Text.Json.Serialization
  System.Text.Json.Serialization.JsonPropertyNameAttribute:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonPropertyNameAttribute
        name: JsonPropertyNameAttribute
        nameWithType: JsonPropertyNameAttribute
        qualifiedName: System.Text.Json.Serialization.JsonPropertyNameAttribute
        isExternal: true
      VB:
      - id: System.Text.Json.Serialization.JsonPropertyNameAttribute
        name: JsonPropertyNameAttribute
        nameWithType: JsonPropertyNameAttribute
        qualifiedName: System.Text.Json.Serialization.JsonPropertyNameAttribute
        isExternal: true
    isDefinition: true
    parent: System.Text.Json.Serialization
    commentId: T:System.Text.Json.Serialization.JsonPropertyNameAttribute
  System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        name: JsonPropertyNameAttribute
        nameWithType: JsonPropertyNameAttribute.JsonPropertyNameAttribute
        qualifiedName: System.Text.Json.Serialization.JsonPropertyNameAttribute.JsonPropertyNameAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
        name: JsonPropertyNameAttribute
        nameWithType: JsonPropertyNameAttribute.JsonPropertyNameAttribute
        qualifiedName: System.Text.Json.Serialization.JsonPropertyNameAttribute.JsonPropertyNameAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Text.Json.Serialization.JsonPropertyNameAttribute
    commentId: M:System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: AuthRequest.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: AuthRequest.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.PersonalIdentityNumber
  System.Text.Json.Serialization.JsonIgnoreAttribute:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonIgnoreAttribute
        name: JsonIgnoreAttribute
        nameWithType: JsonIgnoreAttribute
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreAttribute
        isExternal: true
      VB:
      - id: System.Text.Json.Serialization.JsonIgnoreAttribute
        name: JsonIgnoreAttribute
        nameWithType: JsonIgnoreAttribute
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreAttribute
        isExternal: true
    isDefinition: true
    parent: System.Text.Json.Serialization
    commentId: T:System.Text.Json.Serialization.JsonIgnoreAttribute
  System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        name: JsonIgnoreAttribute
        nameWithType: JsonIgnoreAttribute.JsonIgnoreAttribute
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreAttribute.JsonIgnoreAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
        name: JsonIgnoreAttribute
        nameWithType: JsonIgnoreAttribute.JsonIgnoreAttribute
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreAttribute.JsonIgnoreAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Text.Json.Serialization.JsonIgnoreAttribute
    commentId: M:System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
  System.Text.Json.Serialization.JsonIgnoreCondition:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonIgnoreCondition
        name: JsonIgnoreCondition
        nameWithType: JsonIgnoreCondition
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreCondition
        isExternal: true
      VB:
      - id: System.Text.Json.Serialization.JsonIgnoreCondition
        name: JsonIgnoreCondition
        nameWithType: JsonIgnoreCondition
        qualifiedName: System.Text.Json.Serialization.JsonIgnoreCondition
        isExternal: true
    isDefinition: true
    parent: System.Text.Json.Serialization
    commentId: T:System.Text.Json.Serialization.JsonIgnoreCondition
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement*
        name: Requirement
        nameWithType: AuthRequest.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement*
        name: Requirement
        nameWithType: AuthRequest.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.Requirement
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData*
        name: UserVisibleData
        nameWithType: AuthRequest.UserVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData*
        name: UserVisibleData
        nameWithType: AuthRequest.UserVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleData
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData*
        name: UserNonVisibleData
        nameWithType: AuthRequest.UserNonVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData*
        name: UserNonVisibleData
        nameWithType: AuthRequest.UserNonVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserNonVisibleData
  ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat*
        name: UserVisibleDataFormat
        nameWithType: AuthRequest.UserVisibleDataFormat
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat*
        name: UserVisibleDataFormat
        nameWithType: AuthRequest.UserVisibleDataFormat
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthRequest.UserVisibleDataFormat
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor*
        name: AuthResponse
        nameWithType: AuthResponse.AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AuthResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor*
        name: AuthResponse
        nameWithType: AuthResponse.AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AuthResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef*
        name: OrderRef
        nameWithType: AuthResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef*
        name: OrderRef
        nameWithType: AuthResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.OrderRef
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken*
        name: AutoStartToken
        nameWithType: AuthResponse.AutoStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken*
        name: AutoStartToken
        nameWithType: AuthResponse.AutoStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.AutoStartToken
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken*
        name: QrStartToken
        nameWithType: AuthResponse.QrStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken*
        name: QrStartToken
        nameWithType: AuthResponse.QrStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartToken
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret*
        name: QrStartSecret
        nameWithType: AuthResponse.QrStartSecret
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret*
        name: QrStartSecret
        nameWithType: AuthResponse.QrStartSecret
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse.QrStartSecret
  ActiveLogin.Authentication.BankId.Api.Models.AuthResponse:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
        name: AuthResponse
        nameWithType: AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
        name: AuthResponse
        nameWithType: AuthResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.AuthResponse
  ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor*
        name: CancelRequest
        nameWithType: CancelRequest.CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.CancelRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor*
        name: CancelRequest
        nameWithType: CancelRequest.CancelRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.CancelRequest
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef*
        name: OrderRef
        nameWithType: CancelRequest.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef*
        name: OrderRef
        nameWithType: CancelRequest.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CancelRequest.OrderRef
  ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor*
        name: CancelResponse
        nameWithType: CancelResponse.CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.CancelResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor*
        name: CancelResponse
        nameWithType: CancelResponse.CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.CancelResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CancelResponse.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CancelResponse:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
        name: CancelResponse
        nameWithType: CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
        name: CancelResponse
        nameWithType: CancelResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CancelResponse
  ? ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  ActiveLogin.Authentication.BankId.Api.Models.CertExtensions:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
        name: CertExtensions
        nameWithType: CertExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
        name: CertExtensions
        nameWithType: CertExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
  ? ActiveLogin.Authentication.BankId.Api.Models.Cert.ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
    parent: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  ? ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  ? ActiveLogin.Authentication.BankId.Api.Models.Cert.ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
    parent: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime(ActiveLogin.Authentication.BankId.Api.Models.Cert)
  ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor*
        name: Cert
        nameWithType: Cert.Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.Cert
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor*
        name: Cert
        nameWithType: Cert.Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.Cert
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Cert.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore*
        name: NotBefore
        nameWithType: Cert.NotBefore
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore*
        name: NotBefore
        nameWithType: Cert.NotBefore
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Cert.NotBefore
  ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter*
        name: NotAfter
        nameWithType: Cert.NotAfter
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter*
        name: NotAfter
        nameWithType: Cert.NotAfter
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Cert.NotAfter
  ActiveLogin.Authentication.BankId.Api.Models.Cert:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Cert
        name: Cert
        nameWithType: Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Cert
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Cert
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime*
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime*
        name: GetNotBeforeDateTime
        nameWithType: CertExtensions.GetNotBeforeDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotBeforeDateTime
  ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime*
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime*
        name: GetNotAfterDateTime
        nameWithType: CertExtensions.GetNotAfterDateTime
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CertExtensions.GetNotAfterDateTime
  ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor*
        name: CollectRequest
        nameWithType: CollectRequest.CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.CollectRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor*
        name: CollectRequest
        nameWithType: CollectRequest.CollectRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.CollectRequest
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef*
        name: OrderRef
        nameWithType: CollectRequest.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef*
        name: OrderRef
        nameWithType: CollectRequest.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectRequest.OrderRef
  ? ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
        name: CollectResponseExtensions
        nameWithType: CollectResponseExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
        name: CollectResponseExtensions
        nameWithType: CollectResponseExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
  ? ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
    parent: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  ? ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  ? ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
    parent: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode(ActiveLogin.Authentication.BankId.Api.Models.CollectResponse)
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor*
        name: CollectResponse
        nameWithType: CollectResponse.CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor*
        name: CollectResponse
        nameWithType: CollectResponse.CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CollectResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
        name: CompletionData
        nameWithType: CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
        name: CompletionData
        nameWithType: CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CompletionData
  System.Text.Json.Serialization.JsonConstructorAttribute:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonConstructorAttribute
        name: JsonConstructorAttribute
        nameWithType: JsonConstructorAttribute
        qualifiedName: System.Text.Json.Serialization.JsonConstructorAttribute
        isExternal: true
      VB:
      - id: System.Text.Json.Serialization.JsonConstructorAttribute
        name: JsonConstructorAttribute
        nameWithType: JsonConstructorAttribute
        qualifiedName: System.Text.Json.Serialization.JsonConstructorAttribute
        isExternal: true
    isDefinition: true
    parent: System.Text.Json.Serialization
    commentId: T:System.Text.Json.Serialization.JsonConstructorAttribute
  System.Text.Json.Serialization.JsonConstructorAttribute.#ctor:
    name:
      CSharp:
      - id: System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
        name: JsonConstructorAttribute
        nameWithType: JsonConstructorAttribute.JsonConstructorAttribute
        qualifiedName: System.Text.Json.Serialization.JsonConstructorAttribute.JsonConstructorAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
        name: JsonConstructorAttribute
        nameWithType: JsonConstructorAttribute.JsonConstructorAttribute
        qualifiedName: System.Text.Json.Serialization.JsonConstructorAttribute.JsonConstructorAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Text.Json.Serialization.JsonConstructorAttribute
    commentId: M:System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef*
        name: OrderRef
        nameWithType: CollectResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef*
        name: OrderRef
        nameWithType: CollectResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.OrderRef
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status*
        name: Status
        nameWithType: CollectResponse.Status
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status*
        name: Status
        nameWithType: CollectResponse.Status
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.Status
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode*
        name: HintCode
        nameWithType: CollectResponse.HintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode*
        name: HintCode
        nameWithType: CollectResponse.HintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.HintCode
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData*
        name: CompletionData
        nameWithType: CollectResponse.CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData*
        name: CompletionData
        nameWithType: CollectResponse.CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse.CompletionData
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponse:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
        name: CollectResponse
        nameWithType: CollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CollectResponse
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus*
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus*
        name: GetCollectStatus
        nameWithType: CollectResponseExtensions.GetCollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectStatus
  ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode*
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode*
        name: GetCollectHintCode
        nameWithType: CollectResponseExtensions.GetCollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CollectResponseExtensions.GetCollectHintCode
  ? ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
        name: CompletionData
        nameWithType: CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
        name: CompletionData
        nameWithType: CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
  ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
        name: CompletionDataExtensions
        nameWithType: CompletionDataExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
        name: CompletionDataExtensions
        nameWithType: CompletionDataExtensions
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
  ? ActiveLogin.Authentication.BankId.Api.Models.CompletionData.ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
    parent: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions
    commentId: M:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml(ActiveLogin.Authentication.BankId.Api.Models.CompletionData)
  ActiveLogin.Authentication.BankId.Api.Models.User:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User
        name: User
        nameWithType: User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User
        name: User
        nameWithType: User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.User
  ActiveLogin.Authentication.BankId.Api.Models.Device:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device
        name: Device
        nameWithType: Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device
        name: Device
        nameWithType: Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.Models
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.Device
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor*
        name: CompletionData
        nameWithType: CompletionData.CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.CompletionData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor*
        name: CompletionData
        nameWithType: CompletionData.CompletionData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.CompletionData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User*
        name: User
        nameWithType: CompletionData.User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User*
        name: User
        nameWithType: CompletionData.User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.User
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device*
        name: Device
        nameWithType: CompletionData.Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device*
        name: Device
        nameWithType: CompletionData.Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Device
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert*
        name: Cert
        nameWithType: CompletionData.Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert*
        name: Cert
        nameWithType: CompletionData.Cert
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Cert
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature*
        name: Signature
        nameWithType: CompletionData.Signature
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature*
        name: Signature
        nameWithType: CompletionData.Signature
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.Signature
  ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse*
        name: OcspResponse
        nameWithType: CompletionData.OcspResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse*
        name: OcspResponse
        nameWithType: CompletionData.OcspResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionData.OcspResponse
  ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml*
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml*
        name: GetSignatureXml
        nameWithType: CompletionDataExtensions.GetSignatureXml
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.CompletionDataExtensions.GetSignatureXml
  ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor*
        name: Device
        nameWithType: Device.Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device.Device
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor*
        name: Device
        nameWithType: Device.Device
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device.Device
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Device.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress*
        name: IpAddress
        nameWithType: Device.IpAddress
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress*
        name: IpAddress
        nameWithType: Device.IpAddress
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Device.IpAddress
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Boolean}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Boolean}
  ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor*
        name: Requirement
        nameWithType: Requirement.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.Requirement
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor*
        name: Requirement
        nameWithType: Requirement.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.Requirement
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Requirement.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies*
        name: CertificatePolicies
        nameWithType: Requirement.CertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies*
        name: CertificatePolicies
        nameWithType: Requirement.CertificatePolicies
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Requirement.CertificatePolicies
  ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired*
        name: TokenStartRequired
        nameWithType: Requirement.TokenStartRequired
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired*
        name: TokenStartRequired
        nameWithType: Requirement.TokenStartRequired
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Requirement.TokenStartRequired
  ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint*
        name: AllowFingerprint
        nameWithType: Requirement.AllowFingerprint
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint*
        name: AllowFingerprint
        nameWithType: Requirement.AllowFingerprint
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.Requirement.AllowFingerprint
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
        name: SignRequest
        nameWithType: SignRequest.SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor*
        name: SignRequest
        nameWithType: SignRequest.SignRequest
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.SignRequest
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp*
        name: EndUserIp
        nameWithType: SignRequest.EndUserIp
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp*
        name: EndUserIp
        nameWithType: SignRequest.EndUserIp
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.EndUserIp
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: SignRequest.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: SignRequest.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.PersonalIdentityNumber
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement*
        name: Requirement
        nameWithType: SignRequest.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement*
        name: Requirement
        nameWithType: SignRequest.Requirement
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.Requirement
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData*
        name: UserVisibleData
        nameWithType: SignRequest.UserVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData*
        name: UserVisibleData
        nameWithType: SignRequest.UserVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleData
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat*
        name: UserVisibleDataFormat
        nameWithType: SignRequest.UserVisibleDataFormat
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat*
        name: UserVisibleDataFormat
        nameWithType: SignRequest.UserVisibleDataFormat
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserVisibleDataFormat
  ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData*
        name: UserNonVisibleData
        nameWithType: SignRequest.UserNonVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData*
        name: UserNonVisibleData
        nameWithType: SignRequest.UserNonVisibleData
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignRequest.UserNonVisibleData
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor*
        name: SignResponse
        nameWithType: SignResponse.SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.SignResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor*
        name: SignResponse
        nameWithType: SignResponse.SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.SignResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef*
        name: OrderRef
        nameWithType: SignResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef*
        name: OrderRef
        nameWithType: SignResponse.OrderRef
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.OrderRef
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken*
        name: AutoStartToken
        nameWithType: SignResponse.AutoStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken*
        name: AutoStartToken
        nameWithType: SignResponse.AutoStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.AutoStartToken
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken*
        name: QrStartToken
        nameWithType: SignResponse.QrStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken*
        name: QrStartToken
        nameWithType: SignResponse.QrStartToken
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartToken
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret*
        name: QrStartSecret
        nameWithType: SignResponse.QrStartSecret
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret*
        name: QrStartSecret
        nameWithType: SignResponse.QrStartSecret
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.SignResponse.QrStartSecret
  ActiveLogin.Authentication.BankId.Api.Models.SignResponse:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
        name: SignResponse
        nameWithType: SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
        name: SignResponse
        nameWithType: SignResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.SignResponse
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.Models.SignResponse
  ActiveLogin.Authentication.BankId.Api.Models.User.#ctor*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.#ctor*
        name: User
        nameWithType: User.User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.User
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.#ctor*
        name: User
        nameWithType: User.User
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.User
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.User.#ctor
  ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: User.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber*
        name: PersonalIdentityNumber
        nameWithType: User.PersonalIdentityNumber
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.User.PersonalIdentityNumber
  ActiveLogin.Authentication.BankId.Api.Models.User.Name*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.Name*
        name: Name
        nameWithType: User.Name
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.Name
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.Name*
        name: Name
        nameWithType: User.Name
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.Name
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.User.Name
  ActiveLogin.Authentication.BankId.Api.Models.User.GivenName*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName*
        name: GivenName
        nameWithType: User.GivenName
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName*
        name: GivenName
        nameWithType: User.GivenName
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.User.GivenName
  ActiveLogin.Authentication.BankId.Api.Models.User.Surname*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.Surname*
        name: Surname
        nameWithType: User.Surname
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.Surname
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.Models.User.Surname*
        name: Surname
        nameWithType: User.Surname
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.User.Surname
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.Models.User.Surname
  ActiveLogin.Authentication.BankId.Api.UserMessage:
    name:
      CSharp:
      - name: ActiveLogin.Authentication.BankId.Api.UserMessage
        nameWithType: ActiveLogin.Authentication.BankId.Api.UserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage
      VB:
      - name: ActiveLogin.Authentication.BankId.Api.UserMessage
        nameWithType: ActiveLogin.Authentication.BankId.Api.UserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage
    isDefinition: true
    commentId: N:ActiveLogin.Authentication.BankId.Api.UserMessage
  ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
        name: IBankIdUserMessage
        nameWithType: IBankIdUserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
        name: IBankIdUserMessage
        nameWithType: IBankIdUserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.UserMessage
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
  ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
        name: MessageShortName
        nameWithType: MessageShortName
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
        name: MessageShortName
        nameWithType: MessageShortName
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.UserMessage
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.MessageShortName
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse*
        name: GetMessageShortNameForCollectResponse
        nameWithType: BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse*
        name: GetMessageShortNameForCollectResponse
        nameWithType: BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForCollectResponse
  ? ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
        name: GetMessageShortNameForCollectResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        name: CollectStatus
        nameWithType: CollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        name: CollectHintCode
        nameWithType: CollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
        name: GetMessageShortNameForCollectResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
        name: CollectStatus
        nameWithType: CollectStatus
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectStatus
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
        name: CollectHintCode
        nameWithType: CollectHintCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse(ActiveLogin.Authentication.BankId.Api.Models.CollectStatus,ActiveLogin.Authentication.BankId.Api.Models.CollectHintCode,System.Boolean,System.Boolean,System.Boolean)
  ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse*
        name: GetMessageShortNameForErrorResponse
        nameWithType: BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse*
        name: GetMessageShortNameForErrorResponse
        nameWithType: BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage.GetMessageShortNameForErrorResponse
  ? ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
  : name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
        name: GetMessageShortNameForErrorResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        name: ErrorCode
        nameWithType: ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
        name: GetMessageShortNameForErrorResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
        name: ErrorCode
        nameWithType: ErrorCode
        qualifiedName: ActiveLogin.Authentication.BankId.Api.Models.ErrorCode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage
    commentId: M:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse(ActiveLogin.Authentication.BankId.Api.Models.ErrorCode)
  ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
        name: BankIdRecommendedUserMessage
        nameWithType: BankIdRecommendedUserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
        name: BankIdRecommendedUserMessage
        nameWithType: BankIdRecommendedUserMessage
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
    isDefinition: true
    commentId: T:ActiveLogin.Authentication.BankId.Api.UserMessage.BankIdRecommendedUserMessage
  ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse*
        name: GetMessageShortNameForCollectResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse*
        name: GetMessageShortNameForCollectResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForCollectResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForCollectResponse
  ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse*:
    name:
      CSharp:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse*
        name: GetMessageShortNameForErrorResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse
      VB:
      - id: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse*
        name: GetMessageShortNameForErrorResponse
        nameWithType: IBankIdUserMessage.GetMessageShortNameForErrorResponse
        qualifiedName: ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse
    isDefinition: true
    commentId: Overload:ActiveLogin.Authentication.BankId.Api.UserMessage.IBankIdUserMessage.GetMessageShortNameForErrorResponse
